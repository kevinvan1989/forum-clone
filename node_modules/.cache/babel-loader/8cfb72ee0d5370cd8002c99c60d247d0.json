{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/ProfilePage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getUserProfile } from \"../redux/actions/postsActions\";\nimport moment from \"moment\";\nimport BlogpostProfile from \"../components/BlogpostProfile\";\n\nclass ProfilePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      userDetails: {\n        avatar: \" \",\n        blog_posts: \" \",\n        comments: \" \",\n        created_at: \" \",\n        favorite_color: \" \",\n        first_name: \" \",\n        last_name: \" \",\n        last_login_at: \" \"\n      }\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    // const { id } = this.props.match.params;\n    // API.get(`/api/users/${id}`).then((res) => {\n    //   console.log(\"detail\", res.data);\n    // });\n    const {\n      id\n    } = this.props.match.params;\n    this.props.getUsersDetails(id);\n    this.setState({\n      loading: !this.state.loading,\n      userDetails: this.props.post.userDetails\n    });\n  }\n\n  render() {\n    // const {\n    //   avatar,\n    //   blog_posts,\n    //   comments,\n    //   created_at,\n    //   favorite_color,\n    //   first_name,\n    //   last_name,\n    //   last_login_at,\n    // } = this.props.post.userDetails;\n    //const { loading } = this.props.post;\n    const {\n      loading\n    } = this.state;\n    console.log(\"prof page props\", this.props.post.userDetails);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(ClipLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatar,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, `${first_name} ${last_name}`), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Member since: \", moment(created_at).format(\"YYYY-MM-DD\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"badge badge-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }, comments.length), \" \", \"comments\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"badge badge-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }, blog_posts.length), \" \", \"blog posts\"))), \" \")), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, \"All blog posts of \", first_name), blog_posts.map(post => /*#__PURE__*/React.createElement(BlogpostProfile, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  post: state.posts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsersDetails: userId => dispatch(getUserProfile(userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/ProfilePage.js"],"names":["React","Component","connect","ClipLoader","getUserProfile","moment","BlogpostProfile","ProfilePage","state","loading","userDetails","avatar","blog_posts","comments","created_at","favorite_color","first_name","last_name","last_login_at","componentDidMount","id","props","match","params","getUsersDetails","setState","post","render","console","log","format","length","map","mapStateToProps","posts","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getUserProfile } from \"../redux/actions/postsActions\";\nimport moment from \"moment\";\nimport BlogpostProfile from \"../components/BlogpostProfile\";\n\nclass ProfilePage extends Component {\n  state = {\n    loading: true,\n    userDetails: {\n      avatar: \" \",\n      blog_posts: \" \",\n      comments: \" \",\n      created_at: \" \",\n      favorite_color: \" \",\n      first_name: \" \",\n      last_name: \" \",\n      last_login_at: \" \",\n    },\n  };\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    // const { id } = this.props.match.params;\n\n    // API.get(`/api/users/${id}`).then((res) => {\n    //   console.log(\"detail\", res.data);\n    // });\n\n    const { id } = this.props.match.params;\n    this.props.getUsersDetails(id);\n    this.setState({\n      loading: !this.state.loading,\n      userDetails: this.props.post.userDetails\n    });\n  }\n\n  render() {\n    // const {\n    //   avatar,\n    //   blog_posts,\n    //   comments,\n    //   created_at,\n    //   favorite_color,\n    //   first_name,\n    //   last_name,\n    //   last_login_at,\n    // } = this.props.post.userDetails;\n\n    //const { loading } = this.props.post;\n    const { loading } = this.state;\n\n    console.log(\"prof page props\", this.props.post.userDetails);\n\n    return (\n      <div>\n        {loading ? (\n          <ClipLoader />\n        ) : (\n          <div>\n            {/* header */}\n            <section>\n              <div>\n                <img src={avatar} alt=\"\" />\n              </div>\n              <div>\n                <h2>{`${first_name} ${last_name}`}</h2>\n                <h3>Member since: {moment(created_at).format(\"YYYY-MM-DD\")}</h3>\n                {/* data totals of user */}\n                <div>\n                  <div>\n                    <h3>\n                      <span class=\"badge badge-secondary\">\n                        {comments.length}\n                      </span>{\" \"}\n                      comments\n                    </h3>\n                  </div>\n                  <div>\n                    <h3>\n                      <span class=\"badge badge-secondary\">\n                        {blog_posts.length}\n                      </span>{\" \"}\n                      blog posts\n                    </h3>\n                  </div>\n                </div>{\" \"}\n                {/* end of data */}\n              </div>\n            </section>\n\n            <section>\n              <h2>All blog posts of {first_name}</h2>\n              {blog_posts.map((post) => (\n                <BlogpostProfile post={post} />\n              ))}\n            </section>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  post: state.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUsersDetails: (userId) => dispatch(getUserProfile(userId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\n"]},"metadata":{},"sourceType":"module"}