{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/Register.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { API } from \"../libs/API\";\nimport RegisterForm from \"../components/Forms/RegisterForm\";\nimport { Redirect } from \"react-router-dom\";\nexport default class Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirect: false\n    };\n\n    this.handleRegister = values => {\n      const {\n        REGISTER_firstName,\n        REGISTER_lastName,\n        REGISTER_email,\n        REGISTER_password,\n        REGISTER_avatar,\n        REGISTER_favColor\n      } = values;\n      const userData = {\n        // Set data to API format (naming + FORMIK values)\n        first_name: REGISTER_firstName,\n        last_name: REGISTER_lastName,\n        email: REGISTER_email,\n        password: REGISTER_password,\n        avatar: REGISTER_avatar,\n        favorite_color: REGISTER_favColor\n      }; // Submit all data to create new user ...\n      // No tokens here\n\n      API.post(\"api/users\", userData).then(response => {});\n      this.setState({\n        redirect: true\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, !this.state.redirect ? /*#__PURE__*/React.createElement(Formik, {\n      onSubmit: this.handleRegister,\n      initialValues: {\n        // D.m.v. deze keys worden values opgehaald in <Field>\n        REGISTER_firstName: \"\",\n        REGISTER_lastName: \"\",\n        REGISTER_email: \"\",\n        REGISTER_password: \"\",\n        REGISTER_avatar: \"\",\n        REGISTER_favColor: \"#2F9599\"\n      } // Input and give feedback / errors\n      ,\n      validationSchema: Yup.object({\n        REGISTER_firstName: Yup.string().required(\"req\"),\n        REGISTER_lastName: Yup.string().required(\"required\"),\n        REGISTER_email: Yup.string().matches(/^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/, \"Not a valid email\").required(\"required\"),\n        REGISTER_password: Yup.string() // .matches(\n        //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&])$/,\n        //   \"Must contain at least 1 cap, 1 digit & 1 spec char\"\n        // )\n        .min(8).required(\"required\"),\n        REGISTER_avatar: Yup.string().required(),\n        REGISTER_favColor: Yup.string().required()\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, props => /*#__PURE__*/React.createElement(RegisterForm, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }))) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/Register.js"],"names":["React","Component","Formik","Yup","API","RegisterForm","Redirect","Register","state","redirect","handleRegister","values","REGISTER_firstName","REGISTER_lastName","REGISTER_email","REGISTER_password","REGISTER_avatar","REGISTER_favColor","userData","first_name","last_name","email","password","avatar","favorite_color","post","then","response","setState","render","object","string","required","matches","min","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { API } from \"../libs/API\";\nimport RegisterForm from \"../components/Forms/RegisterForm\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class Register extends Component {\n  state = {\n    redirect: false,\n  };\n\n  handleRegister = (values) => {\n    const {\n      REGISTER_firstName,\n      REGISTER_lastName,\n      REGISTER_email,\n      REGISTER_password,\n      REGISTER_avatar,\n      REGISTER_favColor,\n    } = values;\n    const userData = {\n      // Set data to API format (naming + FORMIK values)\n      first_name: REGISTER_firstName,\n      last_name: REGISTER_lastName,\n      email: REGISTER_email,\n      password: REGISTER_password,\n      avatar: REGISTER_avatar,\n      favorite_color: REGISTER_favColor,\n    };\n\n    // Submit all data to create new user ...\n    // No tokens here\n    API.post(\"api/users\", userData).then((response) => {\n    });\n\n    this.setState({ redirect: true });\n  };\n\n  render() {\n    return (\n      <div className=\"m-5\">\n        {!this.state.redirect ? (\n          <Formik\n            onSubmit={this.handleRegister}\n            initialValues={{\n              // D.m.v. deze keys worden values opgehaald in <Field>\n              REGISTER_firstName: \"\",\n              REGISTER_lastName: \"\",\n              REGISTER_email: \"\",\n              REGISTER_password: \"\",\n              REGISTER_avatar: \"\",\n              REGISTER_favColor: \"#2F9599\",\n            }}\n            // Input and give feedback / errors\n            validationSchema={Yup.object({\n              REGISTER_firstName: Yup.string().required(\"req\"),\n\n              REGISTER_lastName: Yup.string().required(\"required\"),\n\n              REGISTER_email: Yup.string()\n                .matches(\n                  /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/,\n                  \"Not a valid email\"\n                )\n                .required(\"required\"),\n\n              REGISTER_password: Yup.string()\n                // .matches(\n                //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&])$/,\n                //   \"Must contain at least 1 cap, 1 digit & 1 spec char\"\n                // )\n                .min(8)\n                .required(\"required\"),\n\n              REGISTER_avatar: Yup.string().required(),\n\n              REGISTER_favColor: Yup.string().required(),\n            })}\n          >\n            {(props) => <RegisterForm {...props} />}\n          </Formik>\n        ) : (\n          <Redirect to={\"/login\"} />\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}