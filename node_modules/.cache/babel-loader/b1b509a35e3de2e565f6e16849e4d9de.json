{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Belarusian [be]\n//! author : Dmitry Demidov : https://github.com/demidov91\n//! author: Praleska: http://praleska.pro/\n//! Author : Menelion Elensúle : https://github.com/Oire\nimport moment from '../moment';\n\nfunction plural(word, num) {\n  var forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\n\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n  var format = {\n    ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n    mm: withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n    hh: withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n    dd: 'дзень_дні_дзён',\n    MM: 'месяц_месяцы_месяцаў',\n    yy: 'год_гады_гадоў'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'хвіліна' : 'хвіліну';\n  } else if (key === 'h') {\n    return withoutSuffix ? 'гадзіна' : 'гадзіну';\n  } else {\n    return number + ' ' + plural(format[key], +number);\n  }\n}\n\nexport default moment.defineLocale('be', {\n  months: {\n    format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),\n    standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')\n  },\n  monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n  weekdays: {\n    format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),\n    standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n    isFormat: /\\[ ?[Ууў] ?(?:мінулую|наступную)? ?\\] ?dddd/\n  },\n  weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n  weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY г.',\n    LLL: 'D MMMM YYYY г., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY г., HH:mm'\n  },\n  calendar: {\n    sameDay: '[Сёння ў] LT',\n    nextDay: '[Заўтра ў] LT',\n    lastDay: '[Учора ў] LT',\n    nextWeek: function nextWeek() {\n      return '[У] dddd [ў] LT';\n    },\n    lastWeek: function lastWeek() {\n      switch (this.day()) {\n        case 0:\n        case 3:\n        case 5:\n        case 6:\n          return '[У мінулую] dddd [ў] LT';\n\n        case 1:\n        case 2:\n        case 4:\n          return '[У мінулы] dddd [ў] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'праз %s',\n    past: '%s таму',\n    s: 'некалькі секунд',\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: relativeTimeWithPlural,\n    hh: relativeTimeWithPlural,\n    d: 'дзень',\n    dd: relativeTimeWithPlural,\n    M: 'месяц',\n    MM: relativeTimeWithPlural,\n    y: 'год',\n    yy: relativeTimeWithPlural\n  },\n  meridiemParse: /ночы|раніцы|дня|вечара/,\n  isPM: function isPM(input) {\n    return /^(дня|вечара)$/.test(input);\n  },\n  meridiem: function meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночы';\n    } else if (hour < 12) {\n      return 'раніцы';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечара';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n  ordinal: function ordinal(number, period) {\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n      case 'w':\n      case 'W':\n        return (number % 10 === 2 || number % 10 === 3) && number % 100 !== 12 && number % 100 !== 13 ? number + '-і' : number + '-ы';\n\n      case 'D':\n        return number + '-га';\n\n      default:\n        return number;\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n  }\n});","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/moment/dist/locale/be.js"],"names":["moment","plural","word","num","forms","split","relativeTimeWithPlural","number","withoutSuffix","key","format","ss","mm","hh","dd","MM","yy","defineLocale","months","standalone","monthsShort","weekdays","isFormat","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","lastDay","nextWeek","lastWeek","day","sameElse","relativeTime","future","past","s","m","h","d","M","y","meridiemParse","isPM","input","test","meridiem","hour","minute","isLower","dayOfMonthOrdinalParse","ordinal","period","week","dow","doy"],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n//! locale : Belarusian [be]\n//! author : Dmitry Demidov : https://github.com/demidov91\n//! author: Praleska: http://praleska.pro/\n//! Author : Menelion Elensúle : https://github.com/Oire\n\nimport moment from '../moment';\n\nfunction plural(word, num) {\n    var forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11\n        ? forms[0]\n        : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n        ? forms[1]\n        : forms[2];\n}\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n    var format = {\n        ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n        mm: withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n        hh: withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n        dd: 'дзень_дні_дзён',\n        MM: 'месяц_месяцы_месяцаў',\n        yy: 'год_гады_гадоў',\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'хвіліна' : 'хвіліну';\n    } else if (key === 'h') {\n        return withoutSuffix ? 'гадзіна' : 'гадзіну';\n    } else {\n        return number + ' ' + plural(format[key], +number);\n    }\n}\n\nexport default moment.defineLocale('be', {\n    months: {\n        format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split(\n            '_'\n        ),\n        standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split(\n            '_'\n        ),\n    },\n    monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split(\n        '_'\n    ),\n    weekdays: {\n        format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split(\n            '_'\n        ),\n        standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split(\n            '_'\n        ),\n        isFormat: /\\[ ?[Ууў] ?(?:мінулую|наступную)? ?\\] ?dddd/,\n    },\n    weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n    weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY г.',\n        LLL: 'D MMMM YYYY г., HH:mm',\n        LLLL: 'dddd, D MMMM YYYY г., HH:mm',\n    },\n    calendar: {\n        sameDay: '[Сёння ў] LT',\n        nextDay: '[Заўтра ў] LT',\n        lastDay: '[Учора ў] LT',\n        nextWeek: function () {\n            return '[У] dddd [ў] LT';\n        },\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return '[У мінулую] dddd [ў] LT';\n                case 1:\n                case 2:\n                case 4:\n                    return '[У мінулы] dddd [ў] LT';\n            }\n        },\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: 'праз %s',\n        past: '%s таму',\n        s: 'некалькі секунд',\n        m: relativeTimeWithPlural,\n        mm: relativeTimeWithPlural,\n        h: relativeTimeWithPlural,\n        hh: relativeTimeWithPlural,\n        d: 'дзень',\n        dd: relativeTimeWithPlural,\n        M: 'месяц',\n        MM: relativeTimeWithPlural,\n        y: 'год',\n        yy: relativeTimeWithPlural,\n    },\n    meridiemParse: /ночы|раніцы|дня|вечара/,\n    isPM: function (input) {\n        return /^(дня|вечара)$/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночы';\n        } else if (hour < 12) {\n            return 'раніцы';\n        } else if (hour < 17) {\n            return 'дня';\n        } else {\n            return 'вечара';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n    ordinal: function (number, period) {\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return (number % 10 === 2 || number % 10 === 3) &&\n                    number % 100 !== 12 &&\n                    number % 100 !== 13\n                    ? number + '-і'\n                    : number + '-ы';\n            case 'D':\n                return number + '-га';\n            default:\n                return number;\n        }\n    },\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 7, // The week that contains Jan 7th is the first week of the year.\n    },\n});\n"]},"metadata":{},"sourceType":"module"}