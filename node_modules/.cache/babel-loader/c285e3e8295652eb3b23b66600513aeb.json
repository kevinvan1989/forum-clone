{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\nimport moment from '../moment';\n\nfunction plural(word, num) {\n  var forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\n\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n  var format = {\n    ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n    mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n    hh: 'час_часа_часов',\n    dd: 'день_дня_дней',\n    MM: 'месяц_месяца_месяцев',\n    yy: 'год_года_лет'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'минута' : 'минуту';\n  } else {\n    return number + ' ' + plural(format[key], +number);\n  }\n}\n\nvar monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i]; // http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n\nexport default moment.defineLocale('ru', {\n  months: {\n    format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n    standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n  },\n  monthsShort: {\n    // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n    format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n    standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n  },\n  weekdays: {\n    standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n    format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n    isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n  },\n  weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  monthsParse: monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n  monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // копия предыдущего\n  monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // полные названия с падежами\n  monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n  // Выражение, которое соотвествует только сокращённым формам\n  monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY г.',\n    LLL: 'D MMMM YYYY г., H:mm',\n    LLLL: 'dddd, D MMMM YYYY г., H:mm'\n  },\n  calendar: {\n    sameDay: '[Сегодня, в] LT',\n    nextDay: '[Завтра, в] LT',\n    lastDay: '[Вчера, в] LT',\n    nextWeek: function (now) {\n      if (now.week() !== this.week()) {\n        switch (this.day()) {\n          case 0:\n            return '[В следующее] dddd, [в] LT';\n\n          case 1:\n          case 2:\n          case 4:\n            return '[В следующий] dddd, [в] LT';\n\n          case 3:\n          case 5:\n          case 6:\n            return '[В следующую] dddd, [в] LT';\n        }\n      } else {\n        if (this.day() === 2) {\n          return '[Во] dddd, [в] LT';\n        } else {\n          return '[В] dddd, [в] LT';\n        }\n      }\n    },\n    lastWeek: function (now) {\n      if (now.week() !== this.week()) {\n        switch (this.day()) {\n          case 0:\n            return '[В прошлое] dddd, [в] LT';\n\n          case 1:\n          case 2:\n          case 4:\n            return '[В прошлый] dddd, [в] LT';\n\n          case 3:\n          case 5:\n          case 6:\n            return '[В прошлую] dddd, [в] LT';\n        }\n      } else {\n        if (this.day() === 2) {\n          return '[Во] dddd, [в] LT';\n        } else {\n          return '[В] dddd, [в] LT';\n        }\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'через %s',\n    past: '%s назад',\n    s: 'несколько секунд',\n    ss: relativeTimeWithPlural,\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'час',\n    hh: relativeTimeWithPlural,\n    d: 'день',\n    dd: relativeTimeWithPlural,\n    M: 'месяц',\n    MM: relativeTimeWithPlural,\n    y: 'год',\n    yy: relativeTimeWithPlural\n  },\n  meridiemParse: /ночи|утра|дня|вечера/i,\n  isPM: function (input) {\n    return /^(дня|вечера)$/.test(input);\n  },\n  meridiem: function (hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночи';\n    } else if (hour < 12) {\n      return 'утра';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечера';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n  ordinal: function (number, period) {\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n        return number + '-й';\n\n      case 'D':\n        return number + '-го';\n\n      case 'w':\n      case 'W':\n        return number + '-я';\n\n      default:\n        return number;\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n});","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/moment/dist/locale/ru.js"],"names":["moment","plural","word","num","forms","split","relativeTimeWithPlural","number","withoutSuffix","key","format","ss","mm","hh","dd","MM","yy","monthsParse","defineLocale","months","standalone","monthsShort","weekdays","isFormat","weekdaysShort","weekdaysMin","longMonthsParse","shortMonthsParse","monthsRegex","monthsShortRegex","monthsStrictRegex","monthsShortStrictRegex","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","lastDay","nextWeek","now","week","day","lastWeek","sameElse","relativeTime","future","past","s","m","h","d","M","y","meridiemParse","isPM","input","test","meridiem","hour","minute","isLower","dayOfMonthOrdinalParse","ordinal","period","dow","doy"],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\n\nimport moment from '../moment';\n\nfunction plural(word, num) {\n    var forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11\n        ? forms[0]\n        : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n        ? forms[1]\n        : forms[2];\n}\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n    var format = {\n        ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n        mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n        hh: 'час_часа_часов',\n        dd: 'день_дня_дней',\n        MM: 'месяц_месяца_месяцев',\n        yy: 'год_года_лет',\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'минута' : 'минуту';\n    } else {\n        return number + ' ' + plural(format[key], +number);\n    }\n}\nvar monthsParse = [\n    /^янв/i,\n    /^фев/i,\n    /^мар/i,\n    /^апр/i,\n    /^ма[йя]/i,\n    /^июн/i,\n    /^июл/i,\n    /^авг/i,\n    /^сен/i,\n    /^окт/i,\n    /^ноя/i,\n    /^дек/i,\n];\n\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\nexport default moment.defineLocale('ru', {\n    months: {\n        format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(\n            '_'\n        ),\n        standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(\n            '_'\n        ),\n    },\n    monthsShort: {\n        // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(\n            '_'\n        ),\n        standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(\n            '_'\n        ),\n    },\n    weekdays: {\n        standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(\n            '_'\n        ),\n        format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(\n            '_'\n        ),\n        isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/,\n    },\n    weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    monthsParse: monthsParse,\n    longMonthsParse: monthsParse,\n    shortMonthsParse: monthsParse,\n\n    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n    monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n    // копия предыдущего\n    monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n    // полные названия с падежами\n    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n    // Выражение, которое соотвествует только сокращённым формам\n    monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY г.',\n        LLL: 'D MMMM YYYY г., H:mm',\n        LLLL: 'dddd, D MMMM YYYY г., H:mm',\n    },\n    calendar: {\n        sameDay: '[Сегодня, в] LT',\n        nextDay: '[Завтра, в] LT',\n        lastDay: '[Вчера, в] LT',\n        nextWeek: function (now) {\n            if (now.week() !== this.week()) {\n                switch (this.day()) {\n                    case 0:\n                        return '[В следующее] dddd, [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В следующий] dddd, [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В следующую] dddd, [в] LT';\n                }\n            } else {\n                if (this.day() === 2) {\n                    return '[Во] dddd, [в] LT';\n                } else {\n                    return '[В] dddd, [в] LT';\n                }\n            }\n        },\n        lastWeek: function (now) {\n            if (now.week() !== this.week()) {\n                switch (this.day()) {\n                    case 0:\n                        return '[В прошлое] dddd, [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd, [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd, [в] LT';\n                }\n            } else {\n                if (this.day() === 2) {\n                    return '[Во] dddd, [в] LT';\n                } else {\n                    return '[В] dddd, [в] LT';\n                }\n            }\n        },\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: 'через %s',\n        past: '%s назад',\n        s: 'несколько секунд',\n        ss: relativeTimeWithPlural,\n        m: relativeTimeWithPlural,\n        mm: relativeTimeWithPlural,\n        h: 'час',\n        hh: relativeTimeWithPlural,\n        d: 'день',\n        dd: relativeTimeWithPlural,\n        M: 'месяц',\n        MM: relativeTimeWithPlural,\n        y: 'год',\n        yy: relativeTimeWithPlural,\n    },\n    meridiemParse: /ночи|утра|дня|вечера/i,\n    isPM: function (input) {\n        return /^(дня|вечера)$/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночи';\n        } else if (hour < 12) {\n            return 'утра';\n        } else if (hour < 17) {\n            return 'дня';\n        } else {\n            return 'вечера';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n    ordinal: function (number, period) {\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            case 'w':\n            case 'W':\n                return number + '-я';\n            default:\n                return number;\n        }\n    },\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n});\n"]},"metadata":{},"sourceType":"module"}