{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/EditPost.js\";\nimport React, { Component } from 'react';\nimport { API } from '../libs/API';\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport PostTextEditor from \"../components/PostTextEditor\";\nimport { editPost } from '../redux/actions/postsActions';\n\nclass EditPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      body: '',\n      loading: true\n    };\n\n    this.handleSubmitCreate = (values, postId) => {\n      console.log(values, postId);\n      this.props.edit(values, this.props.match.params.idPost);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      idPost: id\n    } = this.props.match.params;\n    API.get(`/api/posts/${id}`).then(response => {\n      console.log(response);\n      this.setState({\n        title: response.data.title,\n        body: response.data.body,\n        loading: !this.state.loading\n      });\n    });\n  }\n\n  render() {\n    console.log('prps', this.props.match.params);\n    console.log(this.state);\n    const {\n      title,\n      body\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, !this.state.loading && this.state.body !== '' ? /*#__PURE__*/React.createElement(Formik, {\n      onSubmit: this.handleSubmitCreate,\n      initialValues: {\n        POST_title: this.state.title,\n        // D.m.v. deze keys worden values opgehaald in <Field>\n        POST_editor: this.state.body\n      } // Input and give feedback / errors\n      ,\n      validationSchema: Yup.object({}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 66\n      }\n    }, props => /*#__PURE__*/React.createElement(PostTextEditor, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }))) : '');\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  state: state.posts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  edit: (values, postId) => dispatch(editPost(values, postId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/EditPost.js"],"names":["React","Component","API","Formik","connect","Yup","PostTextEditor","editPost","EditPost","state","title","body","loading","handleSubmitCreate","values","postId","console","log","props","edit","match","params","idPost","componentDidMount","id","get","then","response","setState","data","render","POST_title","POST_editor","object","mapStateToProps","posts","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {API} from '../libs/API'\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\"\nimport * as Yup from \"yup\";\nimport PostTextEditor from \"../components/PostTextEditor\";\nimport { editPost } from '../redux/actions/postsActions';\n\nclass EditPost extends Component {\n    state = {\n        title: '',\n        body: '',\n        loading: true\n    }\n     \n    componentDidMount(){\n        const {idPost: id} = this.props.match.params\n        API.get(`/api/posts/${id}`).then(\n            response => {\n                console.log(response)\n                this.setState({\n                    title: response.data.title,\n                    body: response.data.body,\n                    loading: !this.state.loading\n                })\n            }\n        )\n    }\n\n    handleSubmitCreate = (values, postId) => {\n        console.log(values, postId)\n        this.props.edit(values, this.props.match.params.idPost)\n    }\n\n    render() {\n        console.log('prps', this.props.match.params)\n        console.log(this.state)\n        const {title, body} = this.state\n\n        return (\n            <div>\n                {!this.state.loading && this.state.body !== '' ? <Formik\n          onSubmit={this.handleSubmitCreate}\n          \n          initialValues={{\n            POST_title: this.state.title,\n            // D.m.v. deze keys worden values opgehaald in <Field>\n            POST_editor: this.state.body\n          }}\n          // Input and give feedback / errors\n          validationSchema={Yup.object({})}\n        >\n          {props => <PostTextEditor {...props} />}\n        </Formik>\n        \n    :\n    ''}\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state =>({\n    state: state.posts\n}) \n\nconst mapDispatchToProps = dispatch => ({\n    edit: (values, postId) => dispatch(editPost(values, postId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost)"]},"metadata":{},"sourceType":"module"}