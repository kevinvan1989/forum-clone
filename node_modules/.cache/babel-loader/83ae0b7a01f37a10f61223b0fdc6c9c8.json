{"ast":null,"code":"const initialState = {\n  current_page: 1,\n  posts: [],\n  postDetail: {}\n};\n\nconst postsReducer = (state = initialState, action) => {\n  console.log(\"action.payload\", action.payload);\n\n  switch (action.type) {\n    case \"FETCH_DATA\":\n      return {\n        // Get the 'current_page' element out of data/payload\n        current_page: action.payload.current_page,\n        // Last page\n        last_page: action.payload.last_page,\n        // Get the list of posts out of data/payload\n        posts: action.payload.data\n      };\n\n    case \"ADD_COMMENT\":\n      {\n        const comments = [...state, action.payload];\n        return {\n          comments\n        };\n      }\n\n    case \"ADD_NEW_POST\":\n      return action.payload;\n\n    case \"SHOW_DETAIL\":\n      return { ...state,\n        postDetail: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postsReducer;","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/redux/reducers/postsReducer.js"],"names":["initialState","current_page","posts","postDetail","postsReducer","state","action","console","log","payload","type","last_page","data","comments"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AAAEC,EAAAA,YAAY,EAAE,CAAhB;AAAmBC,EAAAA,KAAK,EAAE,EAA1B;AAA8BC,EAAAA,UAAU,EAAE;AAA1C,CAArB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,MAAM,CAACG,OAArC;;AACA,UAAQH,MAAM,CAACI,IAAf;AACE,SAAK,YAAL;AACE,aAAO;AACL;AACAT,QAAAA,YAAY,EAAEK,MAAM,CAACG,OAAP,CAAeR,YAFxB;AAGL;AACAU,QAAAA,SAAS,EAAEL,MAAM,CAACG,OAAP,CAAeE,SAJrB;AAKL;AACAT,QAAAA,KAAK,EAAEI,MAAM,CAACG,OAAP,CAAeG;AANjB,OAAP;;AASF,SAAK,aAAL;AAAoB;AAClB,cAAMC,QAAQ,GAAG,CAAC,GAAGR,KAAJ,EAAWC,MAAM,CAACG,OAAlB,CAAjB;AACA,eAAO;AACLI,UAAAA;AADK,SAAP;AAGD;;AAED,SAAK,cAAL;AACE,aAAOP,MAAM,CAACG,OAAd;;AAEF,SAAK,aAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYF,QAAAA,UAAU,EAAEG,MAAM,CAACG;AAA/B,OAAP;;AACF;AACE,aAAOJ,KAAP;AAxBJ;AA0BD,CA5BD;;AA8BA,eAAeD,YAAf","sourcesContent":["const initialState = { current_page: 1, posts: [], postDetail: {} };\n\nconst postsReducer = (state = initialState, action) => {\n  console.log(\"action.payload\", action.payload);\n  switch (action.type) {\n    case \"FETCH_DATA\":\n      return {\n        // Get the 'current_page' element out of data/payload\n        current_page: action.payload.current_page,\n        // Last page\n        last_page: action.payload.last_page,\n        // Get the list of posts out of data/payload\n        posts: action.payload.data\n      }\n\n    case \"ADD_COMMENT\": {\n      const comments = [...state, action.payload];\n      return {\n        comments,\n      };\n    }\n\n    case \"ADD_NEW_POST\":\n      return action.payload;\n\n    case \"SHOW_DETAIL\":\n      return { ...state, postDetail: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default postsReducer;\n"]},"metadata":{},"sourceType":"module"}