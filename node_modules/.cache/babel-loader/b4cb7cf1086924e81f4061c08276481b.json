{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Pseudo [x-pseudo]\n//! author : Andrew Hood : https://github.com/andrewhood125\nimport moment from '../moment';\nexport default moment.defineLocale('x-pseudo', {\n  months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),\n  monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),\n  weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n  weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[T~ódá~ý át] LT',\n    nextDay: '[T~ómó~rró~w át] LT',\n    nextWeek: 'dddd [át] LT',\n    lastDay: '[Ý~ést~érdá~ý át] LT',\n    lastWeek: '[L~ást] dddd [át] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'í~ñ %s',\n    past: '%s á~gó',\n    s: 'á ~féw ~sécó~ñds',\n    ss: '%d s~écóñ~ds',\n    m: 'á ~míñ~úté',\n    mm: '%d m~íñú~tés',\n    h: 'á~ñ hó~úr',\n    hh: '%d h~óúrs',\n    d: 'á ~dáý',\n    dd: '%d d~áýs',\n    M: 'á ~móñ~th',\n    MM: '%d m~óñt~hs',\n    y: 'á ~ýéár',\n    yy: '%d ý~éárs'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n  ordinal: function ordinal(number) {\n    var b = number % 10,\n        output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n    return number + output;\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n});","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/moment/dist/locale/x-pseudo.js"],"names":["moment","defineLocale","months","split","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","number","b","output","week","dow","doy"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,eAAeA,MAAM,CAACC,YAAP,CAAoB,UAApB,EAAgC;AAC3CC,EAAAA,MAAM,EAAE,6GAA6GC,KAA7G,CACJ,GADI,CADmC;AAI3CC,EAAAA,WAAW,EAAE,8DAA8DD,KAA9D,CACT,GADS,CAJ8B;AAO3CE,EAAAA,gBAAgB,EAAE,IAPyB;AAQ3CC,EAAAA,QAAQ,EAAE,yEAAyEH,KAAzE,CACN,GADM,CARiC;AAW3CI,EAAAA,aAAa,EAAE,qCAAqCJ,KAArC,CAA2C,GAA3C,CAX4B;AAY3CK,EAAAA,WAAW,EAAE,4BAA4BL,KAA5B,CAAkC,GAAlC,CAZ8B;AAa3CM,EAAAA,kBAAkB,EAAE,IAbuB;AAc3CC,EAAAA,cAAc,EAAE;AACZC,IAAAA,EAAE,EAAE,OADQ;AAEZC,IAAAA,CAAC,EAAE,YAFS;AAGZC,IAAAA,EAAE,EAAE,aAHQ;AAIZC,IAAAA,GAAG,EAAE,mBAJO;AAKZC,IAAAA,IAAI,EAAE;AALM,GAd2B;AAqB3CC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,iBADH;AAENC,IAAAA,OAAO,EAAE,qBAFH;AAGNC,IAAAA,QAAQ,EAAE,cAHJ;AAINC,IAAAA,OAAO,EAAE,sBAJH;AAKNC,IAAAA,QAAQ,EAAE,sBALJ;AAMNC,IAAAA,QAAQ,EAAE;AANJ,GArBiC;AA6B3CC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,QADE;AAEVC,IAAAA,IAAI,EAAE,SAFI;AAGVC,IAAAA,CAAC,EAAE,kBAHO;AAIVC,IAAAA,EAAE,EAAE,cAJM;AAKVC,IAAAA,CAAC,EAAE,YALO;AAMVC,IAAAA,EAAE,EAAE,cANM;AAOVC,IAAAA,CAAC,EAAE,WAPO;AAQVC,IAAAA,EAAE,EAAE,WARM;AASVC,IAAAA,CAAC,EAAE,QATO;AAUVC,IAAAA,EAAE,EAAE,UAVM;AAWVC,IAAAA,CAAC,EAAE,WAXO;AAYVC,IAAAA,EAAE,EAAE,aAZM;AAaVC,IAAAA,CAAC,EAAE,SAbO;AAcVC,IAAAA,EAAE,EAAE;AAdM,GA7B6B;AA6C3CC,EAAAA,sBAAsB,EAAE,sBA7CmB;AA8C3CC,EAAAA,OAAO,EAAE,iBAAUC,MAAV,EAAkB;AACvB,QAAIC,CAAC,GAAGD,MAAM,GAAG,EAAjB;AAAA,QACIE,MAAM,GACF,CAAC,EAAGF,MAAM,GAAG,GAAV,GAAiB,EAAnB,CAAD,KAA4B,CAA5B,GACM,IADN,GAEMC,CAAC,KAAK,CAAN,GACA,IADA,GAEAA,CAAC,KAAK,CAAN,GACA,IADA,GAEAA,CAAC,KAAK,CAAN,GACA,IADA,GAEA,IAVd;AAWA,WAAOD,MAAM,GAAGE,MAAhB;AACH,GA3D0C;AA4D3CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,CADH;AACM;AACRC,IAAAA,GAAG,EAAE,CAFH,CAEM;;AAFN;AA5DqC,CAAhC,CAAf","sourcesContent":["//! moment.js locale configuration\n//! locale : Pseudo [x-pseudo]\n//! author : Andrew Hood : https://github.com/andrewhood125\n\nimport moment from '../moment';\n\nexport default moment.defineLocale('x-pseudo', {\n    months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split(\n        '_'\n    ),\n    monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split(\n        '_'\n    ),\n    monthsParseExact: true,\n    weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split(\n        '_'\n    ),\n    weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n    weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm',\n    },\n    calendar: {\n        sameDay: '[T~ódá~ý át] LT',\n        nextDay: '[T~ómó~rró~w át] LT',\n        nextWeek: 'dddd [át] LT',\n        lastDay: '[Ý~ést~érdá~ý át] LT',\n        lastWeek: '[L~ást] dddd [át] LT',\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: 'í~ñ %s',\n        past: '%s á~gó',\n        s: 'á ~féw ~sécó~ñds',\n        ss: '%d s~écóñ~ds',\n        m: 'á ~míñ~úté',\n        mm: '%d m~íñú~tés',\n        h: 'á~ñ hó~úr',\n        hh: '%d h~óúrs',\n        d: 'á ~dáý',\n        dd: '%d d~áýs',\n        M: 'á ~móñ~th',\n        MM: '%d m~óñt~hs',\n        y: 'á ~ýéár',\n        yy: '%d ý~éárs',\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function (number) {\n        var b = number % 10,\n            output =\n                ~~((number % 100) / 10) === 1\n                    ? 'th'\n                    : b === 1\n                    ? 'st'\n                    : b === 2\n                    ? 'nd'\n                    : b === 3\n                    ? 'rd'\n                    : 'th';\n        return number + output;\n    },\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n});\n"]},"metadata":{},"sourceType":"module"}