{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Luxembourgish [lb]\n//! author : mweimerskirch : https://github.com/mweimerskirch\n//! author : David Raison : https://github.com/kwisatz\nimport moment from '../moment';\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  var format = {\n    m: ['eng Minutt', 'enger Minutt'],\n    h: ['eng Stonn', 'enger Stonn'],\n    d: ['een Dag', 'engem Dag'],\n    M: ['ee Mount', 'engem Mount'],\n    y: ['ee Joer', 'engem Joer']\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nfunction processFutureTime(string) {\n  var number = string.substr(0, string.indexOf(' '));\n\n  if (eifelerRegelAppliesToNumber(number)) {\n    return 'a ' + string;\n  }\n\n  return 'an ' + string;\n}\n\nfunction processPastTime(string) {\n  var number = string.substr(0, string.indexOf(' '));\n\n  if (eifelerRegelAppliesToNumber(number)) {\n    return 'viru ' + string;\n  }\n\n  return 'virun ' + string;\n}\n/**\n * Returns true if the word before the given number loses the '-n' ending.\n * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n *\n * @param number {integer}\n * @returns {boolean}\n */\n\n\nfunction eifelerRegelAppliesToNumber(number) {\n  number = parseInt(number, 10);\n\n  if (isNaN(number)) {\n    return false;\n  }\n\n  if (number < 0) {\n    // Negative Number --> always true\n    return true;\n  } else if (number < 10) {\n    // Only 1 digit\n    if (4 <= number && number <= 7) {\n      return true;\n    }\n\n    return false;\n  } else if (number < 100) {\n    // 2 digits\n    var lastDigit = number % 10,\n        firstDigit = number / 10;\n\n    if (lastDigit === 0) {\n      return eifelerRegelAppliesToNumber(firstDigit);\n    }\n\n    return eifelerRegelAppliesToNumber(lastDigit);\n  } else if (number < 10000) {\n    // 3 or 4 digits --> recursively check first digit\n    while (number >= 10) {\n      number = number / 10;\n    }\n\n    return eifelerRegelAppliesToNumber(number);\n  } else {\n    // Anything larger than 4 digits: recursively check first n-3 digits\n    number = number / 1000;\n    return eifelerRegelAppliesToNumber(number);\n  }\n}\n\nexport default moment.defineLocale('lb', {\n  months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),\n  weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm [Auer]',\n    LTS: 'H:mm:ss [Auer]',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm [Auer]',\n    LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'\n  },\n  calendar: {\n    sameDay: '[Haut um] LT',\n    sameElse: 'L',\n    nextDay: '[Muer um] LT',\n    nextWeek: 'dddd [um] LT',\n    lastDay: '[Gëschter um] LT',\n    lastWeek: function lastWeek() {\n      // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n      switch (this.day()) {\n        case 2:\n        case 4:\n          return '[Leschten] dddd [um] LT';\n\n        default:\n          return '[Leschte] dddd [um] LT';\n      }\n    }\n  },\n  relativeTime: {\n    future: processFutureTime,\n    past: processPastTime,\n    s: 'e puer Sekonnen',\n    ss: '%d Sekonnen',\n    m: processRelativeTime,\n    mm: '%d Minutten',\n    h: processRelativeTime,\n    hh: '%d Stonnen',\n    d: processRelativeTime,\n    dd: '%d Deeg',\n    M: processRelativeTime,\n    MM: '%d Méint',\n    y: processRelativeTime,\n    yy: '%d Joer'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n});","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/moment/dist/locale/lb.js"],"names":["moment","processRelativeTime","number","withoutSuffix","key","isFuture","format","m","h","d","M","y","processFutureTime","string","substr","indexOf","eifelerRegelAppliesToNumber","processPastTime","parseInt","isNaN","lastDigit","firstDigit","defineLocale","months","split","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","sameElse","nextDay","nextWeek","lastDay","lastWeek","day","relativeTime","future","past","s","ss","mm","hh","dd","MM","yy","dayOfMonthOrdinalParse","ordinal","week","dow","doy"],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n//! locale : Luxembourgish [lb]\n//! author : mweimerskirch : https://github.com/mweimerskirch\n//! author : David Raison : https://github.com/kwisatz\n\nimport moment from '../moment';\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        m: ['eng Minutt', 'enger Minutt'],\n        h: ['eng Stonn', 'enger Stonn'],\n        d: ['een Dag', 'engem Dag'],\n        M: ['ee Mount', 'engem Mount'],\n        y: ['ee Joer', 'engem Joer'],\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n}\nfunction processFutureTime(string) {\n    var number = string.substr(0, string.indexOf(' '));\n    if (eifelerRegelAppliesToNumber(number)) {\n        return 'a ' + string;\n    }\n    return 'an ' + string;\n}\nfunction processPastTime(string) {\n    var number = string.substr(0, string.indexOf(' '));\n    if (eifelerRegelAppliesToNumber(number)) {\n        return 'viru ' + string;\n    }\n    return 'virun ' + string;\n}\n/**\n * Returns true if the word before the given number loses the '-n' ending.\n * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n *\n * @param number {integer}\n * @returns {boolean}\n */\nfunction eifelerRegelAppliesToNumber(number) {\n    number = parseInt(number, 10);\n    if (isNaN(number)) {\n        return false;\n    }\n    if (number < 0) {\n        // Negative Number --> always true\n        return true;\n    } else if (number < 10) {\n        // Only 1 digit\n        if (4 <= number && number <= 7) {\n            return true;\n        }\n        return false;\n    } else if (number < 100) {\n        // 2 digits\n        var lastDigit = number % 10,\n            firstDigit = number / 10;\n        if (lastDigit === 0) {\n            return eifelerRegelAppliesToNumber(firstDigit);\n        }\n        return eifelerRegelAppliesToNumber(lastDigit);\n    } else if (number < 10000) {\n        // 3 or 4 digits --> recursively check first digit\n        while (number >= 10) {\n            number = number / 10;\n        }\n        return eifelerRegelAppliesToNumber(number);\n    } else {\n        // Anything larger than 4 digits: recursively check first n-3 digits\n        number = number / 1000;\n        return eifelerRegelAppliesToNumber(number);\n    }\n}\n\nexport default moment.defineLocale('lb', {\n    months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n        '_'\n    ),\n    monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(\n        '_'\n    ),\n    monthsParseExact: true,\n    weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(\n        '_'\n    ),\n    weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n    weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm [Auer]',\n        LTS: 'H:mm:ss [Auer]',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm [Auer]',\n        LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]',\n    },\n    calendar: {\n        sameDay: '[Haut um] LT',\n        sameElse: 'L',\n        nextDay: '[Muer um] LT',\n        nextWeek: 'dddd [um] LT',\n        lastDay: '[Gëschter um] LT',\n        lastWeek: function () {\n            // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n            switch (this.day()) {\n                case 2:\n                case 4:\n                    return '[Leschten] dddd [um] LT';\n                default:\n                    return '[Leschte] dddd [um] LT';\n            }\n        },\n    },\n    relativeTime: {\n        future: processFutureTime,\n        past: processPastTime,\n        s: 'e puer Sekonnen',\n        ss: '%d Sekonnen',\n        m: processRelativeTime,\n        mm: '%d Minutten',\n        h: processRelativeTime,\n        hh: '%d Stonnen',\n        d: processRelativeTime,\n        dd: '%d Deeg',\n        M: processRelativeTime,\n        MM: '%d Méint',\n        y: processRelativeTime,\n        yy: '%d Joer',\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n});\n"]},"metadata":{},"sourceType":"module"}