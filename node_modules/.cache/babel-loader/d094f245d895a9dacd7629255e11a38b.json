{"ast":null,"code":"//! moment.js locale configuration\n//! locale : French (Canada) [fr-ca]\n//! author : Jonathan Abourbih : https://github.com/jonbca\nimport moment from '../moment';\nexport default moment.defineLocale('fr-ca', {\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Aujourd’hui à] LT',\n    nextDay: '[Demain à] LT',\n    nextWeek: 'dddd [à] LT',\n    lastDay: '[Hier à] LT',\n    lastWeek: 'dddd [dernier à] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    ss: '%d secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n  ordinal: function ordinal(number, period) {\n    switch (period) {\n      // Words with masculine grammatical gender: mois, trimestre, jour\n      default:\n      case 'M':\n      case 'Q':\n      case 'D':\n      case 'DDD':\n      case 'd':\n        return number + (number === 1 ? 'er' : 'e');\n      // Words with feminine grammatical gender: semaine\n\n      case 'w':\n      case 'W':\n        return number + (number === 1 ? 're' : 'e');\n    }\n  }\n});","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/moment/dist/locale/fr-ca.js"],"names":["moment","defineLocale","months","split","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","number","period"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,eAAeA,MAAM,CAACC,YAAP,CAAoB,OAApB,EAA6B;AACxCC,EAAAA,MAAM,EAAE,uFAAuFC,KAAvF,CACJ,GADI,CADgC;AAIxCC,EAAAA,WAAW,EAAE,iEAAiED,KAAjE,CACT,GADS,CAJ2B;AAOxCE,EAAAA,gBAAgB,EAAE,IAPsB;AAQxCC,EAAAA,QAAQ,EAAE,sDAAsDH,KAAtD,CAA4D,GAA5D,CAR8B;AASxCI,EAAAA,aAAa,EAAE,qCAAqCJ,KAArC,CAA2C,GAA3C,CATyB;AAUxCK,EAAAA,WAAW,EAAE,uBAAuBL,KAAvB,CAA6B,GAA7B,CAV2B;AAWxCM,EAAAA,kBAAkB,EAAE,IAXoB;AAYxCC,EAAAA,cAAc,EAAE;AACZC,IAAAA,EAAE,EAAE,OADQ;AAEZC,IAAAA,GAAG,EAAE,UAFO;AAGZC,IAAAA,CAAC,EAAE,YAHS;AAIZC,IAAAA,EAAE,EAAE,aAJQ;AAKZC,IAAAA,GAAG,EAAE,mBALO;AAMZC,IAAAA,IAAI,EAAE;AANM,GAZwB;AAoBxCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,oBADH;AAENC,IAAAA,OAAO,EAAE,eAFH;AAGNC,IAAAA,QAAQ,EAAE,aAHJ;AAINC,IAAAA,OAAO,EAAE,aAJH;AAKNC,IAAAA,QAAQ,EAAE,qBALJ;AAMNC,IAAAA,QAAQ,EAAE;AANJ,GApB8B;AA4BxCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,SADE;AAEVC,IAAAA,IAAI,EAAE,WAFI;AAGVC,IAAAA,CAAC,EAAE,mBAHO;AAIVC,IAAAA,EAAE,EAAE,aAJM;AAKVC,IAAAA,CAAC,EAAE,YALO;AAMVC,IAAAA,EAAE,EAAE,YANM;AAOVC,IAAAA,CAAC,EAAE,WAPO;AAQVC,IAAAA,EAAE,EAAE,WARM;AASVC,IAAAA,CAAC,EAAE,SATO;AAUVC,IAAAA,EAAE,EAAE,UAVM;AAWVC,IAAAA,CAAC,EAAE,SAXO;AAYVC,IAAAA,EAAE,EAAE,SAZM;AAaVC,IAAAA,CAAC,EAAE,OAbO;AAcVC,IAAAA,EAAE,EAAE;AAdM,GA5B0B;AA4CxCC,EAAAA,sBAAsB,EAAE,eA5CgB;AA6CxCC,EAAAA,OAAO,EAAE,iBAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AAC/B,YAAQA,MAAR;AACI;AACA;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,KAAL;AACA,WAAK,GAAL;AACI,eAAOD,MAAM,IAAIA,MAAM,KAAK,CAAX,GAAe,IAAf,GAAsB,GAA1B,CAAb;AAEJ;;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACI,eAAOA,MAAM,IAAIA,MAAM,KAAK,CAAX,GAAe,IAAf,GAAsB,GAA1B,CAAb;AAbR;AAeH;AA7DuC,CAA7B,CAAf","sourcesContent":["//! moment.js locale configuration\n//! locale : French (Canada) [fr-ca]\n//! author : Jonathan Abourbih : https://github.com/jonbca\n\nimport moment from '../moment';\n\nexport default moment.defineLocale('fr-ca', {\n    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(\n        '_'\n    ),\n    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(\n        '_'\n    ),\n    monthsParseExact: true,\n    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm',\n    },\n    calendar: {\n        sameDay: '[Aujourd’hui à] LT',\n        nextDay: '[Demain à] LT',\n        nextWeek: 'dddd [à] LT',\n        lastDay: '[Hier à] LT',\n        lastWeek: 'dddd [dernier à] LT',\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: 'dans %s',\n        past: 'il y a %s',\n        s: 'quelques secondes',\n        ss: '%d secondes',\n        m: 'une minute',\n        mm: '%d minutes',\n        h: 'une heure',\n        hh: '%d heures',\n        d: 'un jour',\n        dd: '%d jours',\n        M: 'un mois',\n        MM: '%d mois',\n        y: 'un an',\n        yy: '%d ans',\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal: function (number, period) {\n        switch (period) {\n            // Words with masculine grammatical gender: mois, trimestre, jour\n            default:\n            case 'M':\n            case 'Q':\n            case 'D':\n            case 'DDD':\n            case 'd':\n                return number + (number === 1 ? 'er' : 'e');\n\n            // Words with feminine grammatical gender: semaine\n            case 'w':\n            case 'W':\n                return number + (number === 1 ? 're' : 'e');\n        }\n    },\n});\n"]},"metadata":{},"sourceType":"module"}