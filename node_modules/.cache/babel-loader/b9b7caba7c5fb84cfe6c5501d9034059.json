{"ast":null,"code":"import _objectSpread from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{API}from\"../libs/API\";import Comment from\"../components/Comment\";import commentIconDark from\"../assets/icons/comment-icon-dark.png\";import CreateComment from\"../components/CreateComment\";import{connect}from\"react-redux\";import{getUser as _getUser}from\"../redux/actions/authActions\";import Userinfo from\"../components/Userinfo\";var Postdetail=/*#__PURE__*/function(_Component){_inherits(Postdetail,_Component);var _super=_createSuper(Postdetail);function Postdetail(){var _this;_classCallCheck(this,Postdetail);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={post:{// user is defined for destructuring\nuser:\"\"},comments:[]};_this.addCommentToState=function(comment){var commentList=_this.state.comments;_this.setState(_objectSpread(_objectSpread({},_this.state),{},{comments:commentList.push(comment)}));var id=_this.props.match.params.id;_this.props.history.push(\"/postdetail/\"+id);};return _this;}_createClass(Postdetail,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.props.getUser();var id=this.props.match.params.id;API.get(\"/api/posts/\".concat(id)).then(function(res){_this2.setState({post:res.data,comments:res.data.comments,commentsLength:res.data.comments.length});});}},{key:\"render\",value:function render(){var _this$state$post=this.state.post,postId=_this$state$post.id,title=_this$state$post.title,body=_this$state$post.body;var _this$state$post$user=this.state.post.user,userId=_this$state$post$user.id,first_name=_this$state$post$user.first_name,last_name=_this$state$post$user.last_name,avatar=_this$state$post$user.avatar;var isLoggedIn=this.props.isLoggedIn;return/*#__PURE__*/React.createElement(\"div\",{className:\"grid-container grid-container--2-col\"},/*#__PURE__*/React.createElement(\"section\",{className:\"grid__col grid__col--1 flex\"},/*#__PURE__*/React.createElement(\"article\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"comment--info\"},/*#__PURE__*/React.createElement(\"img\",{src:commentIconDark,alt:\"\",className:\"comment-icon\"}),\" \",\"\\xA0\",this.state.comments.length,\" comments\"),/*#__PURE__*/React.createElement(\"h1\",null,title),/*#__PURE__*/React.createElement(\"div\",{className:\"body-txt\",dangerouslySetInnerHTML:{__html:body}})),isLoggedIn.user!==\"not set\"&&/*#__PURE__*/React.createElement(CreateComment,{postId:postId,addComment:this.addCommentToState,stated:this.state}),/*#__PURE__*/React.createElement(\"aside\",{className:\"detail--aside\"},/*#__PURE__*/React.createElement(Userinfo,{userId:userId,imgUrl:{avatar:avatar,avatar_class:\"\"},firstName:first_name,lastName:last_name}))),!this.state.add&&/*#__PURE__*/React.createElement(\"section\",{className:\"grid__col grid__col--2\"},this.state.comments.map(function(comment){return/*#__PURE__*/React.createElement(Comment,{commentData:comment});})));}}]);return Postdetail;}(Component);var mapStateToProps=function mapStateToProps(state){return{stated:state,isLoggedIn:state.auth,posts:state.posts};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getUser:function getUser(){return dispatch(_getUser);}};};export default connect(mapStateToProps,mapDispatchToProps)(Postdetail);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/Postdetail.js"],"names":["React","Component","API","Comment","commentIconDark","CreateComment","connect","getUser","Userinfo","Postdetail","state","post","user","comments","addCommentToState","comment","commentList","setState","push","id","props","match","params","history","get","then","res","data","commentsLength","length","postId","title","body","userId","first_name","last_name","avatar","isLoggedIn","__html","avatar_class","add","map","mapStateToProps","stated","auth","posts","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { API } from \"../libs/API\";\nimport Comment from \"../components/Comment\";\nimport commentIconDark from \"../assets/icons/comment-icon-dark.png\";\nimport CreateComment from \"../components/CreateComment\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"../redux/actions/authActions\";\nimport Userinfo from \"../components/Userinfo\";\n\nclass Postdetail extends Component {\n  state = {\n    post: {\n      // user is defined for destructuring\n      user: \"\",\n    },\n    comments: [],\n  };\n\n  componentDidMount() {\n    this.props.getUser();\n    const { id } = this.props.match.params;\n\n    API.get(`/api/posts/${id}`).then((res) => {\n      this.setState({\n        post: res.data,\n        comments: res.data.comments,\n        commentsLength: res.data.comments.length,\n      });\n    });\n  }\n\n  addCommentToState = (comment) => {\n    const commentList = this.state.comments;\n    this.setState({\n      ...this.state,\n      comments: commentList.push(comment),\n    });\n\n    const { id } = this.props.match.params;\n    this.props.history.push(\"/postdetail/\" + id);\n  };\n\n  render() {\n    const { id: postId, title, body } = this.state.post;\n    const { id: userId, first_name, last_name, avatar } = this.state.post.user;\n    const { isLoggedIn } = this.props;\n\n    return (\n      <div className=\"grid-container grid-container--2-col\">\n        {/* Column with orignal post and text editor */}\n        <section className=\"grid__col grid__col--1 flex\">\n          {/* Display blogpost(text content) & avatar as flex */}\n          <article>\n            {/* Comment count total */}\n            <div className=\"comment--info\">\n              <img src={commentIconDark} alt=\"\" className=\"comment-icon\" />{\" \"}\n              &nbsp;\n              {this.state.comments.length} comments\n            </div>\n            <h1>{title}</h1>\n            {/* <Time created_at={created_at} exactTime={true} /> */}\n            <div\n              className=\"body-txt\"\n              dangerouslySetInnerHTML={{ __html: body }}\n            ></div>\n          </article>\n\n          {/* Check if user is logged in:\n                if so: show text area for comment\n                if not: hide text area for comment */}\n          {isLoggedIn.user !== \"not set\" && (\n            <CreateComment\n              postId={postId}\n              addComment={this.addCommentToState}\n              stated={this.state}\n            />\n          )}\n\n          {/* Flex item right with image and name ;*/}\n          <aside className=\"detail--aside\">\n            <Userinfo\n              userId={userId}\n              imgUrl={{ avatar: avatar, avatar_class: \"\" }}\n              firstName={first_name}\n              lastName={last_name}\n            />\n          </aside>\n        </section>\n\n        {/* Colulmn with all comments */}\n        {!this.state.add && (\n          <section className=\"grid__col grid__col--2\">\n            {this.state.comments.map((comment) => (\n              <Comment commentData={comment} />\n            ))}\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  stated: state,\n  isLoggedIn: state.auth,\n  posts: state.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUser: () => dispatch(getUser),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Postdetail);\n"]},"metadata":{},"sourceType":"module"}