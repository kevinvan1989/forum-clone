{"ast":null,"code":"//! moment.js locale configuration\n//! locale : English (Canada) [en-ca]\n//! author : Jonathan Abourbih : https://github.com/jonbca\nimport moment from '../moment';\nexport default moment.defineLocale('en-ca', {\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'YYYY-MM-DD',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal: function ordinal(number) {\n    var b = number % 10,\n        output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n    return number + output;\n  }\n});","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/moment/dist/locale/en-ca.js"],"names":["moment","defineLocale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","number","b","output"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,eAAeA,MAAM,CAACC,YAAP,CAAoB,OAApB,EAA6B;AACxCC,EAAAA,MAAM,EAAE,wFAAwFC,KAAxF,CACJ,GADI,CADgC;AAIxCC,EAAAA,WAAW,EAAE,kDAAkDD,KAAlD,CAAwD,GAAxD,CAJ2B;AAKxCE,EAAAA,QAAQ,EAAE,2DAA2DF,KAA3D,CACN,GADM,CAL8B;AAQxCG,EAAAA,aAAa,EAAE,8BAA8BH,KAA9B,CAAoC,GAApC,CARyB;AASxCI,EAAAA,WAAW,EAAE,uBAAuBJ,KAAvB,CAA6B,GAA7B,CAT2B;AAUxCK,EAAAA,cAAc,EAAE;AACZC,IAAAA,EAAE,EAAE,QADQ;AAEZC,IAAAA,GAAG,EAAE,WAFO;AAGZC,IAAAA,CAAC,EAAE,YAHS;AAIZC,IAAAA,EAAE,EAAE,cAJQ;AAKZC,IAAAA,GAAG,EAAE,qBALO;AAMZC,IAAAA,IAAI,EAAE;AANM,GAVwB;AAkBxCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,eADH;AAENC,IAAAA,OAAO,EAAE,kBAFH;AAGNC,IAAAA,QAAQ,EAAE,cAHJ;AAINC,IAAAA,OAAO,EAAE,mBAJH;AAKNC,IAAAA,QAAQ,EAAE,qBALJ;AAMNC,IAAAA,QAAQ,EAAE;AANJ,GAlB8B;AA0BxCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,OADE;AAEVC,IAAAA,IAAI,EAAE,QAFI;AAGVC,IAAAA,CAAC,EAAE,eAHO;AAIVC,IAAAA,EAAE,EAAE,YAJM;AAKVC,IAAAA,CAAC,EAAE,UALO;AAMVC,IAAAA,EAAE,EAAE,YANM;AAOVC,IAAAA,CAAC,EAAE,SAPO;AAQVC,IAAAA,EAAE,EAAE,UARM;AASVC,IAAAA,CAAC,EAAE,OATO;AAUVC,IAAAA,EAAE,EAAE,SAVM;AAWVC,IAAAA,CAAC,EAAE,SAXO;AAYVC,IAAAA,EAAE,EAAE,WAZM;AAaVC,IAAAA,CAAC,EAAE,QAbO;AAcVC,IAAAA,EAAE,EAAE;AAdM,GA1B0B;AA0CxCC,EAAAA,sBAAsB,EAAE,sBA1CgB;AA2CxCC,EAAAA,OAAO,EAAE,iBAAUC,MAAV,EAAkB;AACvB,QAAIC,CAAC,GAAGD,MAAM,GAAG,EAAjB;AAAA,QACIE,MAAM,GACF,CAAC,EAAGF,MAAM,GAAG,GAAV,GAAiB,EAAnB,CAAD,KAA4B,CAA5B,GACM,IADN,GAEMC,CAAC,KAAK,CAAN,GACA,IADA,GAEAA,CAAC,KAAK,CAAN,GACA,IADA,GAEAA,CAAC,KAAK,CAAN,GACA,IADA,GAEA,IAVd;AAWA,WAAOD,MAAM,GAAGE,MAAhB;AACH;AAxDuC,CAA7B,CAAf","sourcesContent":["//! moment.js locale configuration\n//! locale : English (Canada) [en-ca]\n//! author : Jonathan Abourbih : https://github.com/jonbca\n\nimport moment from '../moment';\n\nexport default moment.defineLocale('en-ca', {\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n        '_'\n    ),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n        '_'\n    ),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'YYYY-MM-DD',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    },\n    calendar: {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal: function (number) {\n        var b = number % 10,\n            output =\n                ~~((number % 100) / 10) === 1\n                    ? 'th'\n                    : b === 1\n                    ? 'st'\n                    : b === 2\n                    ? 'nd'\n                    : b === 3\n                    ? 'rd'\n                    : 'th';\n        return number + output;\n    },\n});\n"]},"metadata":{},"sourceType":"module"}