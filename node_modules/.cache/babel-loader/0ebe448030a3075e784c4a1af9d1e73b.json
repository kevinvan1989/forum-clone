{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Urdu [ur]\n//! author : Sawood Alam : https://github.com/ibnesayeed\n//! author : Zack : https://github.com/ZackVision\nimport moment from '../moment';\nvar months = ['جنوری', 'فروری', 'مارچ', 'اپریل', 'مئی', 'جون', 'جولائی', 'اگست', 'ستمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n    days = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];\nexport default moment.defineLocale('ur', {\n  months: months,\n  monthsShort: months,\n  weekdays: days,\n  weekdaysShort: days,\n  weekdaysMin: days,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd، D MMMM YYYY HH:mm'\n  },\n  meridiemParse: /صبح|شام/,\n  isPM: function isPM(input) {\n    return 'شام' === input;\n  },\n  meridiem: function meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'صبح';\n    }\n\n    return 'شام';\n  },\n  calendar: {\n    sameDay: '[آج بوقت] LT',\n    nextDay: '[کل بوقت] LT',\n    nextWeek: 'dddd [بوقت] LT',\n    lastDay: '[گذشتہ روز بوقت] LT',\n    lastWeek: '[گذشتہ] dddd [بوقت] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s بعد',\n    past: '%s قبل',\n    s: 'چند سیکنڈ',\n    ss: '%d سیکنڈ',\n    m: 'ایک منٹ',\n    mm: '%d منٹ',\n    h: 'ایک گھنٹہ',\n    hh: '%d گھنٹے',\n    d: 'ایک دن',\n    dd: '%d دن',\n    M: 'ایک ماہ',\n    MM: '%d ماہ',\n    y: 'ایک سال',\n    yy: '%d سال'\n  },\n  preparse: function preparse(string) {\n    return string.replace(/،/g, ',');\n  },\n  postformat: function postformat(string) {\n    return string.replace(/,/g, '،');\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n});","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/moment/dist/locale/ur.js"],"names":["moment","months","days","defineLocale","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","meridiemParse","isPM","input","meridiem","hour","minute","isLower","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","preparse","string","replace","postformat","week","dow","doy"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,IAAIC,MAAM,GAAG,CACL,OADK,EAEL,OAFK,EAGL,MAHK,EAIL,OAJK,EAKL,KALK,EAML,KANK,EAOL,QAPK,EAQL,MARK,EASL,OATK,EAUL,QAVK,EAWL,OAXK,EAYL,OAZK,CAAb;AAAA,IAcIC,IAAI,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB,EAAyB,KAAzB,EAAgC,QAAhC,EAA0C,MAA1C,EAAkD,MAAlD,CAdX;AAgBA,eAAeF,MAAM,CAACG,YAAP,CAAoB,IAApB,EAA0B;AACrCF,EAAAA,MAAM,EAAEA,MAD6B;AAErCG,EAAAA,WAAW,EAAEH,MAFwB;AAGrCI,EAAAA,QAAQ,EAAEH,IAH2B;AAIrCI,EAAAA,aAAa,EAAEJ,IAJsB;AAKrCK,EAAAA,WAAW,EAAEL,IALwB;AAMrCM,EAAAA,cAAc,EAAE;AACZC,IAAAA,EAAE,EAAE,OADQ;AAEZC,IAAAA,GAAG,EAAE,UAFO;AAGZC,IAAAA,CAAC,EAAE,YAHS;AAIZC,IAAAA,EAAE,EAAE,aAJQ;AAKZC,IAAAA,GAAG,EAAE,mBALO;AAMZC,IAAAA,IAAI,EAAE;AANM,GANqB;AAcrCC,EAAAA,aAAa,EAAE,SAdsB;AAerCC,EAAAA,IAAI,EAAE,cAAUC,KAAV,EAAiB;AACnB,WAAO,UAAUA,KAAjB;AACH,GAjBoC;AAkBrCC,EAAAA,QAAQ,EAAE,kBAAUC,IAAV,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiC;AACvC,QAAIF,IAAI,GAAG,EAAX,EAAe;AACX,aAAO,KAAP;AACH;;AACD,WAAO,KAAP;AACH,GAvBoC;AAwBrCG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,cADH;AAENC,IAAAA,OAAO,EAAE,cAFH;AAGNC,IAAAA,QAAQ,EAAE,gBAHJ;AAINC,IAAAA,OAAO,EAAE,qBAJH;AAKNC,IAAAA,QAAQ,EAAE,wBALJ;AAMNC,IAAAA,QAAQ,EAAE;AANJ,GAxB2B;AAgCrCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,QADE;AAEVC,IAAAA,IAAI,EAAE,QAFI;AAGVC,IAAAA,CAAC,EAAE,WAHO;AAIVC,IAAAA,EAAE,EAAE,UAJM;AAKVC,IAAAA,CAAC,EAAE,SALO;AAMVC,IAAAA,EAAE,EAAE,QANM;AAOVC,IAAAA,CAAC,EAAE,WAPO;AAQVC,IAAAA,EAAE,EAAE,UARM;AASVC,IAAAA,CAAC,EAAE,QATO;AAUVC,IAAAA,EAAE,EAAE,OAVM;AAWVC,IAAAA,CAAC,EAAE,SAXO;AAYVC,IAAAA,EAAE,EAAE,QAZM;AAaVC,IAAAA,CAAC,EAAE,SAbO;AAcVC,IAAAA,EAAE,EAAE;AAdM,GAhCuB;AAgDrCC,EAAAA,QAAQ,EAAE,kBAAUC,MAAV,EAAkB;AACxB,WAAOA,MAAM,CAACC,OAAP,CAAe,IAAf,EAAqB,GAArB,CAAP;AACH,GAlDoC;AAmDrCC,EAAAA,UAAU,EAAE,oBAAUF,MAAV,EAAkB;AAC1B,WAAOA,MAAM,CAACC,OAAP,CAAe,IAAf,EAAqB,GAArB,CAAP;AACH,GArDoC;AAsDrCE,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,CADH;AACM;AACRC,IAAAA,GAAG,EAAE,CAFH,CAEM;;AAFN;AAtD+B,CAA1B,CAAf","sourcesContent":["//! moment.js locale configuration\n//! locale : Urdu [ur]\n//! author : Sawood Alam : https://github.com/ibnesayeed\n//! author : Zack : https://github.com/ZackVision\n\nimport moment from '../moment';\n\nvar months = [\n        'جنوری',\n        'فروری',\n        'مارچ',\n        'اپریل',\n        'مئی',\n        'جون',\n        'جولائی',\n        'اگست',\n        'ستمبر',\n        'اکتوبر',\n        'نومبر',\n        'دسمبر',\n    ],\n    days = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];\n\nexport default moment.defineLocale('ur', {\n    months: months,\n    monthsShort: months,\n    weekdays: days,\n    weekdaysShort: days,\n    weekdaysMin: days,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd، D MMMM YYYY HH:mm',\n    },\n    meridiemParse: /صبح|شام/,\n    isPM: function (input) {\n        return 'شام' === input;\n    },\n    meridiem: function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'صبح';\n        }\n        return 'شام';\n    },\n    calendar: {\n        sameDay: '[آج بوقت] LT',\n        nextDay: '[کل بوقت] LT',\n        nextWeek: 'dddd [بوقت] LT',\n        lastDay: '[گذشتہ روز بوقت] LT',\n        lastWeek: '[گذشتہ] dddd [بوقت] LT',\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: '%s بعد',\n        past: '%s قبل',\n        s: 'چند سیکنڈ',\n        ss: '%d سیکنڈ',\n        m: 'ایک منٹ',\n        mm: '%d منٹ',\n        h: 'ایک گھنٹہ',\n        hh: '%d گھنٹے',\n        d: 'ایک دن',\n        dd: '%d دن',\n        M: 'ایک ماہ',\n        MM: '%d ماہ',\n        y: 'ایک سال',\n        yy: '%d سال',\n    },\n    preparse: function (string) {\n        return string.replace(/،/g, ',');\n    },\n    postformat: function (string) {\n        return string.replace(/,/g, '،');\n    },\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n});\n"]},"metadata":{},"sourceType":"module"}