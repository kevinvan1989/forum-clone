{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/EditProfile.js\";\nimport React, { Component } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { API } from \"../libs/API\";\nimport RegisterForm from \"../components/Forms/RegisterForm\";\nexport default class EditProfile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleRegister = values => {\n      const {\n        REGISTER_firstName,\n        REGISTER_lastName,\n        REGISTER_email,\n        REGISTER_password,\n        REGISTER_avatar,\n        REGISTER_favColor\n      } = values;\n      const userData = {\n        // Set data to API format (naming + FORMIK values)\n        first_name: REGISTER_firstName,\n        last_name: REGISTER_lastName,\n        email: REGISTER_email,\n        password: REGISTER_password,\n        avatar: REGISTER_avatar,\n        favorite_color: REGISTER_favColor\n      };\n    };\n  }\n\n  componentDidMount() {\n    const {\n      idUser: id\n    } = this.props.match.params;\n    API.get(`/api/users/${id}`).then(response => {\n      console.log('editprof', response);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      onSubmit: this.handleRegister,\n      initialValues: {\n        // D.m.v. deze keys worden values opgehaald in <Field>\n        REGISTER_firstName: \"\",\n        REGISTER_lastName: \"\",\n        REGISTER_email: \"\",\n        REGISTER_password: \"\",\n        REGISTER_avatar: \"\",\n        REGISTER_favColor: \"#2F9599\"\n      } // Input and give feedback / errors\n      ,\n      validationSchema: Yup.object({\n        REGISTER_firstName: Yup.string().required(\"req\"),\n        REGISTER_lastName: Yup.string().required(\"required\"),\n        REGISTER_email: Yup.string().matches(/^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/, \"Not a valid email\").required(\"required\"),\n        REGISTER_password: Yup.string() // .matches(\n        //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&])$/,\n        //   \"Must contain at least 1 cap, 1 digit & 1 spec char\"\n        // )\n        .min(8).required(\"required\"),\n        REGISTER_avatar: Yup.string().required(),\n        REGISTER_favColor: Yup.string().required()\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, props => /*#__PURE__*/React.createElement(RegisterForm, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/EditProfile.js"],"names":["React","Component","Formik","Form","Yup","API","RegisterForm","EditProfile","handleRegister","values","REGISTER_firstName","REGISTER_lastName","REGISTER_email","REGISTER_password","REGISTER_avatar","REGISTER_favColor","userData","first_name","last_name","email","password","avatar","favorite_color","componentDidMount","idUser","id","props","match","params","get","then","response","console","log","render","object","string","required","matches","min"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AAEA,eAAe,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAQ/CO,cAR+C,GAQ9BC,MAAM,IAAI;AACvB,YAAM;AAACC,QAAAA,kBAAD;AAAqBC,QAAAA,iBAArB;AAAwCC,QAAAA,cAAxC;AAAwDC,QAAAA,iBAAxD;AAA2EC,QAAAA,eAA3E;AAA4FC,QAAAA;AAA5F,UAAiHN,MAAvH;AACA,YAAMO,QAAQ,GAAG;AACf;AACAC,QAAAA,UAAU,EAAEP,kBAFG;AAGfQ,QAAAA,SAAS,EAAEP,iBAHI;AAIfQ,QAAAA,KAAK,EAAEP,cAJQ;AAKfQ,QAAAA,QAAQ,EAAEP,iBALK;AAMfQ,QAAAA,MAAM,EAAEP,eANO;AAOfQ,QAAAA,cAAc,EAAEP;AAPD,OAAjB;AASH,KAnB8C;AAAA;;AAC/CQ,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA,MAAM,EAAEC;AAAT,QAAe,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAtC;AACAvB,IAAAA,GAAG,CAACwB,GAAJ,CAAS,cAAaJ,EAAG,EAAzB,EAA4BK,IAA5B,CAAiCC,QAAQ,IAAI;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACH,KAFD;AAGH;;AAeDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACN,MAAA,QAAQ,EAAE,KAAK1B,cADT;AAEN,MAAA,aAAa,EAAE;AACb;AACAE,QAAAA,kBAAkB,EAAE,EAFP;AAGbC,QAAAA,iBAAiB,EAAE,EAHN;AAIbC,QAAAA,cAAc,EAAE,EAJH;AAKbC,QAAAA,iBAAiB,EAAE,EALN;AAMbC,QAAAA,eAAe,EAAE,EANJ;AAObC,QAAAA,iBAAiB,EAAE;AAPN,OAFT,CAWN;AAXM;AAYN,MAAA,gBAAgB,EAAEX,GAAG,CAAC+B,MAAJ,CAAW;AAC3BzB,QAAAA,kBAAkB,EAAEN,GAAG,CAACgC,MAAJ,GAAaC,QAAb,CAAsB,KAAtB,CADO;AAG3B1B,QAAAA,iBAAiB,EAAEP,GAAG,CAACgC,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAHQ;AAK3BzB,QAAAA,cAAc,EAAER,GAAG,CAACgC,MAAJ,GACbE,OADa,CAEZ,uHAFY,EAGZ,mBAHY,EAKbD,QALa,CAKJ,UALI,CALW;AAYzBxB,QAAAA,iBAAiB,EAAET,GAAG,CAACgC,MAAJ,GACnB;AACA;AACA;AACA;AAJmB,SAKlBG,GALkB,CAKd,CALc,EAMlBF,QANkB,CAMT,UANS,CAZM;AAoBzBvB,QAAAA,eAAe,EAAEV,GAAG,CAACgC,MAAJ,GAAaC,QAAb,EApBQ;AAsBzBtB,QAAAA,iBAAiB,EAAEX,GAAG,CAACgC,MAAJ,GAAaC,QAAb;AAtBM,OAAX,CAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAqCLX,KAAK,iBAAI,oBAAC,YAAD,oBAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OArCJ,CADJ,CADJ;AA2CH;;AAjE8C","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { API } from \"../libs/API\";\nimport RegisterForm from \"../components/Forms/RegisterForm\";\n\nexport default class EditProfile extends Component {\n    componentDidMount(){\n        const {idUser: id} = this.props.match.params\n        API.get(`/api/users/${id}`).then(response => {\n            console.log('editprof', response)\n        })\n    }\n\n    handleRegister = values => {\n        const {REGISTER_firstName, REGISTER_lastName, REGISTER_email, REGISTER_password, REGISTER_avatar, REGISTER_favColor} = values;\n        const userData = {\n          // Set data to API format (naming + FORMIK values)\n          first_name: REGISTER_firstName,\n          last_name: REGISTER_lastName,\n          email: REGISTER_email,\n          password: REGISTER_password,\n          avatar: REGISTER_avatar,\n          favorite_color: REGISTER_favColor\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Formik\n          onSubmit={this.handleRegister}\n          initialValues={{\n            // D.m.v. deze keys worden values opgehaald in <Field>\n            REGISTER_firstName: \"\",\n            REGISTER_lastName: \"\",\n            REGISTER_email: \"\",\n            REGISTER_password: \"\",\n            REGISTER_avatar: \"\",\n            REGISTER_favColor: \"#2F9599\"\n          }}\n          // Input and give feedback / errors\n          validationSchema={Yup.object({\n            REGISTER_firstName: Yup.string().required(\"req\"),\n\n            REGISTER_lastName: Yup.string().required(\"required\"),\n\n            REGISTER_email: Yup.string()\n              .matches(\n                /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/,\n                \"Not a valid email\"\n              )\n              .required(\"required\"),\n\n              REGISTER_password: Yup.string()\n              // .matches(\n              //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&])$/,\n              //   \"Must contain at least 1 cap, 1 digit & 1 spec char\"\n              // )\n              .min(8)\n              .required(\"required\"),\n\n              REGISTER_avatar: Yup.string().required(),\n\n              REGISTER_favColor: Yup.string().required()\n          })}\n        >\n          {props => <RegisterForm {...props} />}\n        </Formik>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}