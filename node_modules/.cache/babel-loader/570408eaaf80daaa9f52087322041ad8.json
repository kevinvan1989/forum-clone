{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\nimport moment from '../moment';\nvar months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),\n    monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),\n    monthsParse = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i],\n    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n// Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\nmonthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;\n\nfunction plural(n) {\n  return n > 1 && n < 5 && ~~(n / 10) !== 1;\n}\n\nfunction translate(number, withoutSuffix, key, isFuture) {\n  var result = number + ' ';\n\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'sekundy' : 'sekund');\n      } else {\n        return result + 'sekundami';\n      }\n\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'minuty' : 'minut');\n      } else {\n        return result + 'minutami';\n      }\n\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'hodiny' : 'hodin');\n      } else {\n        return result + 'hodinami';\n      }\n\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'den' : 'dnem';\n\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'dny' : 'dní');\n      } else {\n        return result + 'dny';\n      }\n\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'měsíce' : 'měsíců');\n      } else {\n        return result + 'měsíci';\n      }\n\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokem';\n\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'roky' : 'let');\n      } else {\n        return result + 'lety';\n      }\n\n  }\n}\n\nexport default moment.defineLocale('cs', {\n  months: months,\n  monthsShort: monthsShort,\n  monthsRegex: monthsRegex,\n  monthsShortRegex: monthsRegex,\n  // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n  // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n  monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,\n  monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,\n  monthsParse: monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n  weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n  weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes v] LT',\n    nextDay: '[zítra v] LT',\n    nextWeek: function () {\n      switch (this.day()) {\n        case 0:\n          return '[v neděli v] LT';\n\n        case 1:\n        case 2:\n          return '[v] dddd [v] LT';\n\n        case 3:\n          return '[ve středu v] LT';\n\n        case 4:\n          return '[ve čtvrtek v] LT';\n\n        case 5:\n          return '[v pátek v] LT';\n\n        case 6:\n          return '[v sobotu v] LT';\n      }\n    },\n    lastDay: '[včera v] LT',\n    lastWeek: function () {\n      switch (this.day()) {\n        case 0:\n          return '[minulou neděli v] LT';\n\n        case 1:\n        case 2:\n          return '[minulé] dddd [v] LT';\n\n        case 3:\n          return '[minulou středu v] LT';\n\n        case 4:\n        case 5:\n          return '[minulý] dddd [v] LT';\n\n        case 6:\n          return '[minulou sobotu v] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'před %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n});","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/moment/dist/locale/cs.js"],"names":["moment","months","split","monthsShort","monthsParse","monthsRegex","plural","n","translate","number","withoutSuffix","key","isFuture","result","defineLocale","monthsShortRegex","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","l","calendar","sameDay","nextDay","nextWeek","day","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","week","dow","doy"],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n\nimport moment from '../moment';\n\nvar months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(\n        '_'\n    ),\n    monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),\n    monthsParse = [\n        /^led/i,\n        /^úno/i,\n        /^bře/i,\n        /^dub/i,\n        /^kvě/i,\n        /^(čvn|červen$|června)/i,\n        /^(čvc|červenec|července)/i,\n        /^srp/i,\n        /^zář/i,\n        /^říj/i,\n        /^lis/i,\n        /^pro/i,\n    ],\n    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n    monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;\n\nfunction plural(n) {\n    return n > 1 && n < 5 && ~~(n / 10) !== 1;\n}\nfunction translate(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n    switch (key) {\n        case 's': // a few seconds / in a few seconds / a few seconds ago\n            return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'sekundy' : 'sekund');\n            } else {\n                return result + 'sekundami';\n            }\n        case 'm': // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'minuty' : 'minut');\n            } else {\n                return result + 'minutami';\n            }\n        case 'h': // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'hodiny' : 'hodin');\n            } else {\n                return result + 'hodinami';\n            }\n        case 'd': // a day / in a day / a day ago\n            return withoutSuffix || isFuture ? 'den' : 'dnem';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'dny' : 'dní');\n            } else {\n                return result + 'dny';\n            }\n        case 'M': // a month / in a month / a month ago\n            return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'měsíce' : 'měsíců');\n            } else {\n                return result + 'měsíci';\n            }\n        case 'y': // a year / in a year / a year ago\n            return withoutSuffix || isFuture ? 'rok' : 'rokem';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'roky' : 'let');\n            } else {\n                return result + 'lety';\n            }\n    }\n}\n\nexport default moment.defineLocale('cs', {\n    months: months,\n    monthsShort: monthsShort,\n    monthsRegex: monthsRegex,\n    monthsShortRegex: monthsRegex,\n    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n    monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,\n    monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,\n    monthsParse: monthsParse,\n    longMonthsParse: monthsParse,\n    shortMonthsParse: monthsParse,\n    weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n    weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n    weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd D. MMMM YYYY H:mm',\n        l: 'D. M. YYYY',\n    },\n    calendar: {\n        sameDay: '[dnes v] LT',\n        nextDay: '[zítra v] LT',\n        nextWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[v neděli v] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [v] LT';\n                case 3:\n                    return '[ve středu v] LT';\n                case 4:\n                    return '[ve čtvrtek v] LT';\n                case 5:\n                    return '[v pátek v] LT';\n                case 6:\n                    return '[v sobotu v] LT';\n            }\n        },\n        lastDay: '[včera v] LT',\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[minulou neděli v] LT';\n                case 1:\n                case 2:\n                    return '[minulé] dddd [v] LT';\n                case 3:\n                    return '[minulou středu v] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [v] LT';\n                case 6:\n                    return '[minulou sobotu v] LT';\n            }\n        },\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: 'za %s',\n        past: 'před %s',\n        s: translate,\n        ss: translate,\n        m: translate,\n        mm: translate,\n        h: translate,\n        hh: translate,\n        d: translate,\n        dd: translate,\n        M: translate,\n        MM: translate,\n        y: translate,\n        yy: translate,\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n});\n"]},"metadata":{},"sourceType":"module"}