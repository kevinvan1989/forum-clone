{"ast":null,"code":"import _classCallCheck from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Formik,Form}from\"formik\";import*as Yup from\"yup\";import{API}from\"../libs/API\";import RegisterForm from\"../components/Forms/RegisterForm\";var Register=/*#__PURE__*/function(_Component){_inherits(Register,_Component);var _super=_createSuper(Register);function Register(){var _this;_classCallCheck(this,Register);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleRegister=function(values){var REGISTER_firstName=values.REGISTER_firstName,REGISTER_lastName=values.REGISTER_lastName,REGISTER_email=values.REGISTER_email,REGISTER_password=values.REGISTER_password,REGISTER_avatar=values.REGISTER_avatar,REGISTER_favColor=values.REGISTER_favColor;var userData={// Set data to API format (naming + FORMIK values)\nfirst_name:REGISTER_firstName,last_name:REGISTER_lastName,email:REGISTER_email,password:REGISTER_password,avatar:REGISTER_avatar,favorite_color:REGISTER_favColor};// Submit all data to create new user ...\n// No tokens here\nAPI.post(\"api/users\",userData).then(function(response){console.log(response);});};return _this;}_createClass(Register,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Formik,{onSubmit:this.handleRegister,initialValues:{// D.m.v. deze keys worden values opgehaald in <Field>\nREGISTER_firstName:\"\",REGISTER_lastName:\"\",REGISTER_email:\"\",REGISTER_password:\"\",REGISTER_avatar:\"\",REGISTER_favColor:\"#2F9599\"}// Input and give feedback / errors\n,validationSchema:Yup.object({REGISTER_firstName:Yup.string().required(\"req\"),REGISTER_lastName:Yup.string().required(\"required\"),REGISTER_email:Yup.string().matches(/^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/,\"Not a valid email\").required(\"required\"),REGISTER_password:Yup.string()// .matches(\n//   /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&])$/,\n//   \"Must contain at least 1 cap, 1 digit & 1 spec char\"\n// )\n.min(8).required(\"required\"),REGISTER_avatar:Yup.string().required(),REGISTER_favColor:Yup.string().required()})},function(props){return/*#__PURE__*/React.createElement(RegisterForm,props);}));}}]);return Register;}(Component);export{Register as default};","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/Register.js"],"names":["React","Component","Formik","Form","Yup","API","RegisterForm","Register","handleRegister","values","REGISTER_firstName","REGISTER_lastName","REGISTER_email","REGISTER_password","REGISTER_avatar","REGISTER_favColor","userData","first_name","last_name","email","password","avatar","favorite_color","post","then","response","console","log","object","string","required","matches","min","props"],"mappings":"wqBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,MAAT,CAAiBC,IAAjB,KAA6B,QAA7B,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,GAAT,KAAoB,aAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,kCAAzB,C,GAEqBC,CAAAA,Q,mUACnBC,c,CAAiB,SAAAC,MAAM,CAAI,IAClBC,CAAAA,kBADkB,CAC8FD,MAD9F,CAClBC,kBADkB,CACEC,iBADF,CAC8FF,MAD9F,CACEE,iBADF,CACqBC,cADrB,CAC8FH,MAD9F,CACqBG,cADrB,CACqCC,iBADrC,CAC8FJ,MAD9F,CACqCI,iBADrC,CACwDC,eADxD,CAC8FL,MAD9F,CACwDK,eADxD,CACyEC,iBADzE,CAC8FN,MAD9F,CACyEM,iBADzE,CAEzB,GAAMC,CAAAA,QAAQ,CAAG,CACf;AACAC,UAAU,CAAEP,kBAFG,CAGfQ,SAAS,CAAEP,iBAHI,CAIfQ,KAAK,CAAEP,cAJQ,CAKfQ,QAAQ,CAAEP,iBALK,CAMfQ,MAAM,CAAEP,eANO,CAOfQ,cAAc,CAAEP,iBAPD,CAAjB,CAWA;AACA;AACAV,GAAG,CAACkB,IAAJ,CAAS,WAAT,CAAsBP,QAAtB,EAAgCQ,IAAhC,CAAqC,SAACC,QAAD,CAAc,CACjDC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACD,CAFD,EAID,C,2EAEQ,CACP,mBACE,4CACE,oBAAC,MAAD,EACE,QAAQ,CAAE,KAAKjB,cADjB,CAEE,aAAa,CAAE,CACb;AACAE,kBAAkB,CAAE,EAFP,CAGbC,iBAAiB,CAAE,EAHN,CAIbC,cAAc,CAAE,EAJH,CAKbC,iBAAiB,CAAE,EALN,CAMbC,eAAe,CAAE,EANJ,CAObC,iBAAiB,CAAE,SAPN,CASf;AAXF,CAYE,gBAAgB,CAAEX,GAAG,CAACwB,MAAJ,CAAW,CAC3BlB,kBAAkB,CAAEN,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,KAAtB,CADO,CAG3BnB,iBAAiB,CAAEP,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAHQ,CAK3BlB,cAAc,CAAER,GAAG,CAACyB,MAAJ,GACbE,OADa,CAEZ,uHAFY,CAGZ,mBAHY,EAKbD,QALa,CAKJ,UALI,CALW,CAYzBjB,iBAAiB,CAAET,GAAG,CAACyB,MAAJ,EACnB;AACA;AACA;AACA;AAJmB,CAKlBG,GALkB,CAKd,CALc,EAMlBF,QANkB,CAMT,UANS,CAZM,CAoBzBhB,eAAe,CAAEV,GAAG,CAACyB,MAAJ,GAAaC,QAAb,EApBQ,CAsBzBf,iBAAiB,CAAEX,GAAG,CAACyB,MAAJ,GAAaC,QAAb,EAtBM,CAAX,CAZpB,EAqCG,SAAAG,KAAK,qBAAI,oBAAC,YAAD,CAAkBA,KAAlB,CAAJ,EArCR,CADF,CADF,CA2CD,C,sBAlEmChC,S,SAAjBM,Q","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { API } from \"../libs/API\";\nimport RegisterForm from \"../components/Forms/RegisterForm\";\n\nexport default class Register extends Component {\n  handleRegister = values => {\n    const {REGISTER_firstName, REGISTER_lastName, REGISTER_email, REGISTER_password, REGISTER_avatar, REGISTER_favColor} = values;\n    const userData = {\n      // Set data to API format (naming + FORMIK values)\n      first_name: REGISTER_firstName,\n      last_name: REGISTER_lastName,\n      email: REGISTER_email,\n      password: REGISTER_password,\n      avatar: REGISTER_avatar,\n      favorite_color: REGISTER_favColor\n    }\n\n\n    // Submit all data to create new user ...\n    // No tokens here\n    API.post(\"api/users\", userData).then((response) => {\n      console.log(response)\n    })\n    \n  }\n\n  render() {\n    return (\n      <div>\n        <Formik\n          onSubmit={this.handleRegister}\n          initialValues={{\n            // D.m.v. deze keys worden values opgehaald in <Field>\n            REGISTER_firstName: \"\",\n            REGISTER_lastName: \"\",\n            REGISTER_email: \"\",\n            REGISTER_password: \"\",\n            REGISTER_avatar: \"\",\n            REGISTER_favColor: \"#2F9599\"\n          }}\n          // Input and give feedback / errors\n          validationSchema={Yup.object({\n            REGISTER_firstName: Yup.string().required(\"req\"),\n\n            REGISTER_lastName: Yup.string().required(\"required\"),\n\n            REGISTER_email: Yup.string()\n              .matches(\n                /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/,\n                \"Not a valid email\"\n              )\n              .required(\"required\"),\n\n              REGISTER_password: Yup.string()\n              // .matches(\n              //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&])$/,\n              //   \"Must contain at least 1 cap, 1 digit & 1 spec char\"\n              // )\n              .min(8)\n              .required(\"required\"),\n\n              REGISTER_avatar: Yup.string().required(),\n\n              REGISTER_favColor: Yup.string().required()\n          })}\n        >\n          {props => <RegisterForm {...props} />}\n        </Formik>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}