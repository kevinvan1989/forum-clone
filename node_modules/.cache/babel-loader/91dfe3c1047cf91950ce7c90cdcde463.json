{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/EditProfile.js\";\nimport React, { Component } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { API } from \"../libs/API\";\nimport RegisterForm from \"../components/Forms/RegisterForm\";\nexport default class EditProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      'userDetails': {\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        avatar: '',\n        favorite_color: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      idUser: id\n    } = this.props.match.params;\n    API.get(`/api/users/${id}`).then(response => {\n      this.setState({\n        \"userDetails\": response.data\n      });\n      console.log('editprof', this.state);\n    });\n  } // handleRegister = values => {\n  //     const {REGISTER_firstName, REGISTER_lastName, REGISTER_email, REGISTER_password, REGISTER_avatar, REGISTER_favColor} = values;\n  //     const userData = {\n  //       // Set data to API format (naming + FORMIK values)\n  //       first_name: REGISTER_firstName,\n  //       last_name: REGISTER_lastName,\n  //       email: REGISTER_email,\n  //       password: REGISTER_password,\n  //       avatar: REGISTER_avatar,\n  //       favorite_color: REGISTER_favColor\n  //     }\n  // }\n\n\n  render() {\n    console.log('edit profile');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      onSubmit: this.handleRegister,\n      initialValues: {// D.m.v. deze keys worden values opgehaald in <Field>\n        // REGISTER_firstName: ,\n        // REGISTER_lastName: \"\",\n        // REGISTER_email: \"\",\n        // REGISTER_password: \"\",\n        // REGISTER_avatar: \"\",\n        // REGISTER_favColor: \"#2F9599\"\n      } // Input and give feedback / errors\n      ,\n      validationSchema: Yup.object({\n        REGISTER_firstName: Yup.string().required(\"req\"),\n        REGISTER_lastName: Yup.string().required(\"required\"),\n        REGISTER_email: Yup.string().matches(/^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/, \"Not a valid email\").required(\"required\"),\n        REGISTER_password: Yup.string() // .matches(\n        //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&])$/,\n        //   \"Must contain at least 1 cap, 1 digit & 1 spec char\"\n        // )\n        .min(8).required(\"required\"),\n        REGISTER_avatar: Yup.string().required(),\n        REGISTER_favColor: Yup.string().required()\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, props => /*#__PURE__*/React.createElement(RegisterForm, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/EditProfile.js"],"names":["React","Component","Formik","Form","Yup","API","RegisterForm","EditProfile","state","first_name","last_name","email","password","avatar","favorite_color","componentDidMount","idUser","id","props","match","params","get","then","response","setState","data","console","log","render","handleRegister","object","REGISTER_firstName","string","required","REGISTER_lastName","REGISTER_email","matches","REGISTER_password","min","REGISTER_avatar","REGISTER_favColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AAEA,eAAe,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/CO,KAD+C,GACvC;AACA,qBAAe;AAACC,QAAAA,UAAU,EAAE,EAAb;AACfC,QAAAA,SAAS,EAAE,EADI;AAEfC,QAAAA,KAAK,EAAE,EAFQ;AAGjBC,QAAAA,QAAQ,EAAE,EAHO;AAIjBC,QAAAA,MAAM,EAAE,EAJS;AAKjBC,QAAAA,cAAc,EAAE;AALC;AADf,KADuC;AAAA;;AAU/CC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA,MAAM,EAAEC;AAAT,QAAe,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAtC;AACAf,IAAAA,GAAG,CAACgB,GAAJ,CAAS,cAAaJ,EAAG,EAAzB,EAA4BK,IAA5B,CAAiCC,QAAQ,IAAI;AACzC,WAAKC,QAAL,CAAc;AAAC,uBAAeD,QAAQ,CAACE;AAAzB,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKnB,KAA7B;AACH,KAHD;AAIH,GAhB8C,CAkB/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAoB,EAAAA,MAAM,GAAG;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACN,MAAA,QAAQ,EAAE,KAAKE,cADT;AAEN,MAAA,aAAa,EAAE,CACb;AACA;AACA;AACA;AACA;AACA;AACA;AAPa,OAFT,CAWN;AAXM;AAYN,MAAA,gBAAgB,EAAEzB,GAAG,CAAC0B,MAAJ,CAAW;AAC3BC,QAAAA,kBAAkB,EAAE3B,GAAG,CAAC4B,MAAJ,GAAaC,QAAb,CAAsB,KAAtB,CADO;AAG3BC,QAAAA,iBAAiB,EAAE9B,GAAG,CAAC4B,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAHQ;AAK3BE,QAAAA,cAAc,EAAE/B,GAAG,CAAC4B,MAAJ,GACbI,OADa,CAEZ,uHAFY,EAGZ,mBAHY,EAKbH,QALa,CAKJ,UALI,CALW;AAYzBI,QAAAA,iBAAiB,EAAEjC,GAAG,CAAC4B,MAAJ,GACnB;AACA;AACA;AACA;AAJmB,SAKlBM,GALkB,CAKd,CALc,EAMlBL,QANkB,CAMT,UANS,CAZM;AAoBzBM,QAAAA,eAAe,EAAEnC,GAAG,CAAC4B,MAAJ,GAAaC,QAAb,EApBQ;AAsBzBO,QAAAA,iBAAiB,EAAEpC,GAAG,CAAC4B,MAAJ,GAAaC,QAAb;AAtBM,OAAX,CAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAqCLf,KAAK,iBAAI,oBAAC,YAAD,oBAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OArCJ,CADJ,CADJ;AA2CH;;AA5E8C","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { API } from \"../libs/API\";\nimport RegisterForm from \"../components/Forms/RegisterForm\";\n\nexport default class EditProfile extends Component {\n    state = {\n            'userDetails': {first_name: '',\n            last_name: '',\n            email: '',\n          password: '',\n          avatar: '',\n          favorite_color: ''}\n    }\n\n    componentDidMount(){\n        const {idUser: id} = this.props.match.params\n        API.get(`/api/users/${id}`).then(response => {\n            this.setState({\"userDetails\": response.data})\n            console.log('editprof', this.state)\n        })\n    }\n\n    // handleRegister = values => {\n    //     const {REGISTER_firstName, REGISTER_lastName, REGISTER_email, REGISTER_password, REGISTER_avatar, REGISTER_favColor} = values;\n    //     const userData = {\n    //       // Set data to API format (naming + FORMIK values)\n    //       first_name: REGISTER_firstName,\n    //       last_name: REGISTER_lastName,\n    //       email: REGISTER_email,\n    //       password: REGISTER_password,\n    //       avatar: REGISTER_avatar,\n    //       favorite_color: REGISTER_favColor\n    //     }\n    // }\n\n    render() {\n        console.log('edit profile')\n        return (\n            <div>\n                <Formik\n          onSubmit={this.handleRegister}\n          initialValues={{\n            // D.m.v. deze keys worden values opgehaald in <Field>\n            // REGISTER_firstName: ,\n            // REGISTER_lastName: \"\",\n            // REGISTER_email: \"\",\n            // REGISTER_password: \"\",\n            // REGISTER_avatar: \"\",\n            // REGISTER_favColor: \"#2F9599\"\n          }}\n          // Input and give feedback / errors\n          validationSchema={Yup.object({\n            REGISTER_firstName: Yup.string().required(\"req\"),\n\n            REGISTER_lastName: Yup.string().required(\"required\"),\n\n            REGISTER_email: Yup.string()\n              .matches(\n                /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/,\n                \"Not a valid email\"\n              )\n              .required(\"required\"),\n\n              REGISTER_password: Yup.string()\n              // .matches(\n              //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&])$/,\n              //   \"Must contain at least 1 cap, 1 digit & 1 spec char\"\n              // )\n              .min(8)\n              .required(\"required\"),\n\n              REGISTER_avatar: Yup.string().required(),\n\n              REGISTER_favColor: Yup.string().required()\n          })}\n        >\n          {props => <RegisterForm {...props} />}\n        </Formik>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}