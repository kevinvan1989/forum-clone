{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/ProfilePage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getUserProfile } from \"../redux/actions/postsActions\";\nimport moment from \"moment\";\nimport BlogpostProfile from \"../components/BlogpostProfile\";\n\nclass ProfilePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n\n    this.setBgColor = color => {\n      document.body.style.backgroundColor = color;\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    // const { id } = this.props.match.params;\n    // API.get(`/api/users/${id}`).then((res) => {\n    //   console.log(\"detail\", res.data);\n    // });\n    const {\n      id\n    } = this.props.match.params;\n    this.props.getUsersDetails(id);\n    this.setBgColor(this.props.post.userDetails.favorite_color);\n    this.setState({\n      loading: !this.state.loading\n    });\n  }\n\n  render() {\n    // const {\n    //   avatar,\n    //   blog_posts,\n    //   comments,\n    //   created_at,\n    //   favorite_color,\n    //   first_name,\n    //   last_name,\n    //   last_login_at,\n    // } = this.props.post.userDetails;\n    // const {\n    //   userDetails\n    // } = this.props.post;\n    const {\n      userDetails\n    } = this.props.post;\n    const {\n      loading\n    } = this.props.post;\n    console.log(\"prof page props\", this.props.post);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(ClipLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: `favColor-${userDetails.favorite_color}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: userDetails.avatar,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, `${userDetails.first_name} ${userDetails.last_name}`), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Member since: \", moment(userDetails.created_at).format(\"YYYY-MM-DD\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, userDetails.comments.length), \" comments\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, userDetails.blog_posts.length), \" blog posts\"))), \" \")), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"All blog posts of \", userDetails.first_name), userDetails.blog_posts.map(post => /*#__PURE__*/React.createElement(BlogpostProfile, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 18\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  post: state.posts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsersDetails: userId => dispatch(getUserProfile(userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/ProfilePage.js"],"names":["React","Component","connect","ClipLoader","getUserProfile","moment","BlogpostProfile","ProfilePage","state","loading","setBgColor","color","document","body","style","backgroundColor","componentDidMount","id","props","match","params","getUsersDetails","post","userDetails","favorite_color","setState","render","console","log","avatar","first_name","last_name","created_at","format","comments","length","blog_posts","map","mapStateToProps","posts","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getUserProfile } from \"../redux/actions/postsActions\";\nimport moment from \"moment\";\nimport BlogpostProfile from \"../components/BlogpostProfile\";\n\nclass ProfilePage extends Component {\n  state = {\n    loading: true,\n  };\n\n  setBgColor = color => {\n    document.body.style.backgroundColor = color;\n  }\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    // const { id } = this.props.match.params;\n\n    // API.get(`/api/users/${id}`).then((res) => {\n    //   console.log(\"detail\", res.data);\n    // });\n\n    const { id } = this.props.match.params;\n    this.props.getUsersDetails(id);\n    this.setBgColor(this.props.post.userDetails.favorite_color)\n    this.setState({\n      loading: !this.state.loading,\n    });\n  }\n\n  render() {\n    // const {\n    //   avatar,\n    //   blog_posts,\n    //   comments,\n    //   created_at,\n    //   favorite_color,\n    //   first_name,\n    //   last_name,\n    //   last_login_at,\n    // } = this.props.post.userDetails;\n\n    // const {\n    //   userDetails\n    // } = this.props.post;\n\n    const {userDetails} = this.props.post\n\n    const { loading } = this.props.post;\n\n    console.log(\"prof page props\", this.props.post);\n\n    return (\n      <div>\n        {loading ? (\n          <ClipLoader />\n        ) : (\n          <div className={`favColor-${userDetails.favorite_color}`}>\n            {/* header */}\n            <section>\n              <div>\n                <img src={userDetails.avatar} alt=\"\" />\n              </div>\n              <div>\n                <h2>{`${userDetails.first_name} ${userDetails.last_name}`}</h2>\n                <h3>Member since: {moment(userDetails.created_at).format(\"YYYY-MM-DD\")}</h3>\n                {/* data totals of user */}\n                <div>\n                  <div>\n                    <h3><span className=\"badge badge-secondary\">{userDetails.comments.length}</span> comments</h3>\n                    \n                  </div>\n                  <div>\n                    <h3><span className=\"badge badge-secondary\">{userDetails.blog_posts.length}</span> blog posts</h3>\n                    \n                  </div>\n                </div> {/* end of data */}\n              </div>\n            </section>\n\n            <section>\n              <h2>All blog posts of {userDetails.first_name}</h2>\n              { userDetails.blog_posts.map(post => (\n                 <BlogpostProfile post={post}/>\n              )) }\n            </section>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  post: state.posts\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUsersDetails: (userId) => dispatch(getUserProfile(userId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\n"]},"metadata":{},"sourceType":"module"}