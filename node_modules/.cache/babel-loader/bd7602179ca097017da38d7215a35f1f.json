{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/ProfilePage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getUserProfile } from \"../redux/actions/postsActions\";\nimport moment from \"moment\";\nimport BlogpostProfile from \"../components/BlogpostProfile\";\n\nclass ProfilePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n\n    this.setBgColor = color => {\n      document.body.style.backgroundColor = color;\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    // const { id } = this.props.match.params;\n    // API.get(`/api/users/${id}`).then((res) => {\n    //   console.log(\"detail\", res.data);\n    // });\n    const {\n      id\n    } = this.props.match.params;\n    this.props.getUsersDetails(id);\n    this.setBgColor(this.props.post.userDetails.favorite_color);\n    this.setState({\n      loading: !this.state.loading\n    });\n  }\n\n  render() {\n    const {\n      //avatar,\n      blog_posts,\n      comments,\n      created_at,\n      favorite_color,\n      first_name,\n      last_name,\n      last_login_at\n    } = this.props.post.userDetails;\n    const {\n      loading\n    } = this.props.post;\n    console.log(\"prof page props\", this.props.post);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(ClipLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: `favColor-${favorite_color}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatar,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, `${first_name} ${last_name}`), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Member since: \", moment(created_at).format(\"YYYY-MM-DD\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, comments.length), \" comments\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, blog_posts.length), \" blog posts\"))), \" \")), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"All blog posts of \", first_name), blog_posts.map(post => /*#__PURE__*/React.createElement(BlogpostProfile, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 18\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  post: state.posts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsersDetails: userId => dispatch(getUserProfile(userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/ProfilePage.js"],"names":["React","Component","connect","ClipLoader","getUserProfile","moment","BlogpostProfile","ProfilePage","state","loading","setBgColor","color","document","body","style","backgroundColor","componentDidMount","id","props","match","params","getUsersDetails","post","userDetails","favorite_color","setState","render","blog_posts","comments","created_at","first_name","last_name","last_login_at","console","log","avatar","format","length","map","mapStateToProps","posts","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getUserProfile } from \"../redux/actions/postsActions\";\nimport moment from \"moment\";\nimport BlogpostProfile from \"../components/BlogpostProfile\";\n\nclass ProfilePage extends Component {\n  state = {\n    loading: true,\n  };\n\n  setBgColor = color => {\n    document.body.style.backgroundColor = color;\n  }\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    // const { id } = this.props.match.params;\n\n    // API.get(`/api/users/${id}`).then((res) => {\n    //   console.log(\"detail\", res.data);\n    // });\n\n    const { id } = this.props.match.params;\n    this.props.getUsersDetails(id);\n    this.setBgColor(this.props.post.userDetails.favorite_color)\n    this.setState({\n      loading: !this.state.loading,\n    });\n  }\n\n  render() {\n    const {\n      //avatar,\n      blog_posts,\n      comments,\n      created_at,\n      favorite_color,\n      first_name,\n      last_name,\n      last_login_at,\n    } = this.props.post.userDetails;\n\n    const { loading } = this.props.post;\n\n    console.log(\"prof page props\", this.props.post);\n\n    return (\n      <div>\n        {loading ? (\n          <ClipLoader />\n        ) : (\n          <div className={`favColor-${favorite_color}`}>\n            {/* header */}\n            <section>\n              <div>\n                <img src={avatar} alt=\"\" />\n              </div>\n              <div>\n                <h2>{`${first_name} ${last_name}`}</h2>\n                <h3>Member since: {moment(created_at).format(\"YYYY-MM-DD\")}</h3>\n                {/* data totals of user */}\n                <div>\n                  <div>\n                    <h3><span className=\"badge badge-secondary\">{comments.length}</span> comments</h3>\n                    \n                  </div>\n                  <div>\n                    <h3><span className=\"badge badge-secondary\">{blog_posts.length}</span> blog posts</h3>\n                    \n                  </div>\n                </div> {/* end of data */}\n              </div>\n            </section>\n\n            <section>\n              <h2>All blog posts of {first_name}</h2>\n              { blog_posts.map(post => (\n                 <BlogpostProfile post={post}/>\n              )) }\n            </section>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  post: state.posts\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUsersDetails: (userId) => dispatch(getUserProfile(userId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\n"]},"metadata":{},"sourceType":"module"}