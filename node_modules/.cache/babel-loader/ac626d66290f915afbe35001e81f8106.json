{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Konkani Latin script [gom-latn]\n//! author : The Discoverer : https://github.com/WikiDiscoverer\nimport moment from '../moment';\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  var format = {\n    s: ['thoddea sekondamni', 'thodde sekond'],\n    ss: [number + ' sekondamni', number + ' sekond'],\n    m: ['eka mintan', 'ek minut'],\n    mm: [number + ' mintamni', number + ' mintam'],\n    h: ['eka voran', 'ek vor'],\n    hh: [number + ' voramni', number + ' voram'],\n    d: ['eka disan', 'ek dis'],\n    dd: [number + ' disamni', number + ' dis'],\n    M: ['eka mhoinean', 'ek mhoino'],\n    MM: [number + ' mhoineamni', number + ' mhoine'],\n    y: ['eka vorsan', 'ek voros'],\n    yy: [number + ' vorsamni', number + ' vorsam']\n  };\n  return isFuture ? format[key][0] : format[key][1];\n}\n\nexport default moment.defineLocale('gom-latn', {\n  months: {\n    standalone: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),\n    format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split('_'),\n    isFormat: /MMMM(\\s)+D[oD]?/\n  },\n  monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: \"Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var\".split('_'),\n  weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n  weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'A h:mm [vazta]',\n    LTS: 'A h:mm:ss [vazta]',\n    L: 'DD-MM-YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY A h:mm [vazta]',\n    LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',\n    llll: 'ddd, D MMM YYYY, A h:mm [vazta]'\n  },\n  calendar: {\n    sameDay: '[Aiz] LT',\n    nextDay: '[Faleam] LT',\n    nextWeek: '[Fuddlo] dddd[,] LT',\n    lastDay: '[Kal] LT',\n    lastWeek: '[Fattlo] dddd[,] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s',\n    past: '%s adim',\n    s: processRelativeTime,\n    ss: processRelativeTime,\n    m: processRelativeTime,\n    mm: processRelativeTime,\n    h: processRelativeTime,\n    hh: processRelativeTime,\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er)/,\n  ordinal: function (number, period) {\n    switch (period) {\n      // the ordinal 'er' only applies to day of the month\n      case 'D':\n        return number + 'er';\n\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n      case 'w':\n      case 'W':\n        return number;\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  },\n  meridiemParse: /rati|sokallim|donparam|sanje/,\n  meridiemHour: function (hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === 'rati') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'sokallim') {\n      return hour;\n    } else if (meridiem === 'donparam') {\n      return hour > 12 ? hour : hour + 12;\n    } else if (meridiem === 'sanje') {\n      return hour + 12;\n    }\n  },\n  meridiem: function (hour, minute, isLower) {\n    if (hour < 4) {\n      return 'rati';\n    } else if (hour < 12) {\n      return 'sokallim';\n    } else if (hour < 16) {\n      return 'donparam';\n    } else if (hour < 20) {\n      return 'sanje';\n    } else {\n      return 'rati';\n    }\n  }\n});","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/moment/dist/locale/gom-latn.js"],"names":["moment","processRelativeTime","number","withoutSuffix","key","isFuture","format","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","defineLocale","months","standalone","split","isFormat","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","llll","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","dayOfMonthOrdinalParse","ordinal","period","week","dow","doy","meridiemParse","meridiemHour","hour","meridiem","minute","isLower"],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n//! locale : Konkani Latin script [gom-latn]\n//! author : The Discoverer : https://github.com/WikiDiscoverer\n\nimport moment from '../moment';\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        s: ['thoddea sekondamni', 'thodde sekond'],\n        ss: [number + ' sekondamni', number + ' sekond'],\n        m: ['eka mintan', 'ek minut'],\n        mm: [number + ' mintamni', number + ' mintam'],\n        h: ['eka voran', 'ek vor'],\n        hh: [number + ' voramni', number + ' voram'],\n        d: ['eka disan', 'ek dis'],\n        dd: [number + ' disamni', number + ' dis'],\n        M: ['eka mhoinean', 'ek mhoino'],\n        MM: [number + ' mhoineamni', number + ' mhoine'],\n        y: ['eka vorsan', 'ek voros'],\n        yy: [number + ' vorsamni', number + ' vorsam'],\n    };\n    return isFuture ? format[key][0] : format[key][1];\n}\n\nexport default moment.defineLocale('gom-latn', {\n    months: {\n        standalone: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split(\n            '_'\n        ),\n        format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split(\n            '_'\n        ),\n        isFormat: /MMMM(\\s)+D[oD]?/,\n    },\n    monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split(\n        '_'\n    ),\n    monthsParseExact: true,\n    weekdays: \"Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var\".split('_'),\n    weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n    weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'A h:mm [vazta]',\n        LTS: 'A h:mm:ss [vazta]',\n        L: 'DD-MM-YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY A h:mm [vazta]',\n        LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',\n        llll: 'ddd, D MMM YYYY, A h:mm [vazta]',\n    },\n    calendar: {\n        sameDay: '[Aiz] LT',\n        nextDay: '[Faleam] LT',\n        nextWeek: '[Fuddlo] dddd[,] LT',\n        lastDay: '[Kal] LT',\n        lastWeek: '[Fattlo] dddd[,] LT',\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: '%s',\n        past: '%s adim',\n        s: processRelativeTime,\n        ss: processRelativeTime,\n        m: processRelativeTime,\n        mm: processRelativeTime,\n        h: processRelativeTime,\n        hh: processRelativeTime,\n        d: processRelativeTime,\n        dd: processRelativeTime,\n        M: processRelativeTime,\n        MM: processRelativeTime,\n        y: processRelativeTime,\n        yy: processRelativeTime,\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er)/,\n    ordinal: function (number, period) {\n        switch (period) {\n            // the ordinal 'er' only applies to day of the month\n            case 'D':\n                return number + 'er';\n            default:\n            case 'M':\n            case 'Q':\n            case 'DDD':\n            case 'd':\n            case 'w':\n            case 'W':\n                return number;\n        }\n    },\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n    meridiemParse: /rati|sokallim|donparam|sanje/,\n    meridiemHour: function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'rati') {\n            return hour < 4 ? hour : hour + 12;\n        } else if (meridiem === 'sokallim') {\n            return hour;\n        } else if (meridiem === 'donparam') {\n            return hour > 12 ? hour : hour + 12;\n        } else if (meridiem === 'sanje') {\n            return hour + 12;\n        }\n    },\n    meridiem: function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'rati';\n        } else if (hour < 12) {\n            return 'sokallim';\n        } else if (hour < 16) {\n            return 'donparam';\n        } else if (hour < 20) {\n            return 'sanje';\n        } else {\n            return 'rati';\n        }\n    },\n});\n"]},"metadata":{},"sourceType":"module"}