{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/components/Blogpost.js\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { useStore, connect } from \"react-redux\";\nimport commentIcon from \"../assets/icons/comment.png\";\nimport commentIconDark from \"../assets/icons/comment-icon-dark.png\";\nimport Time from \"./Time\";\nimport Button from \"./Button\";\nimport Userinfo from \"./Userinfo\";\n\nclass Blogpost extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkIfLoggedIn = id => {\n      console.log('id van checkif funct', id);\n    };\n  }\n\n  componentDidMount() {\n    this.checkIfLoggedIn(this.props.auth.payload.id);\n  }\n\n  render() {\n    const {\n      body,\n      comments_count,\n      created_at,\n      id,\n      title,\n      updated_at,\n      user,\n      user_id: userId\n    } = this.props.postDetail;\n    const {\n      auth\n    } = this.props;\n    console.log('auth in blogpost', auth);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blogpost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"article\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Time, {\n      created_at: created_at,\n      exactTime: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      dangerouslySetInnerHTML: {\n        __html: title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-txt\",\n      dangerouslySetInnerHTML: {\n        __html: body\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Time, {\n      created_at: created_at,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"aside\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Userinfo, {\n      userId: userId,\n      imgUrl: {\n        avatar: user.avatar,\n        avatar_class: \"grid__item--img\"\n      },\n      firstName: user.first_name,\n      lastName: user.last_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: commentIconDark,\n      alt: \"\",\n      className: \"comment-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), comments_count, \" comments\"), auth.user !== 'not set' && /*#__PURE__*/React.createElement(Button, {\n      btnText: `ADD COMMENT`,\n      url: `/postdetail/${id}`,\n      ref: '#comment-editor',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 39\n      }\n    }) || // Set non active + hover effect (login to add comment)\n    auth.user === 'not set' && /*#__PURE__*/React.createElement(Button, {\n      btnText: 'ADD COMMENT (to disable)',\n      CSS: \"disabled\",\n      type: \"button\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      btnText: `SEE DETAILS`,\n      url: `/postdetail/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Blogpost);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/components/Blogpost.js"],"names":["React","Component","moment","Link","useStore","connect","commentIcon","commentIconDark","Time","Button","Userinfo","Blogpost","checkIfLoggedIn","id","console","log","componentDidMount","props","auth","payload","render","body","comments_count","created_at","title","updated_at","user","user_id","userId","postDetail","__html","avatar","avatar_class","first_name","last_name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { useStore, connect } from \"react-redux\";\nimport commentIcon from \"../assets/icons/comment.png\";\nimport commentIconDark from \"../assets/icons/comment-icon-dark.png\";\nimport Time from \"./Time\";\nimport Button from \"./Button\";\nimport Userinfo from \"./Userinfo\";\n\n\nclass Blogpost extends Component {\n  checkIfLoggedIn = id => {\n    console.log('id van checkif funct', id)\n  }\n\n  componentDidMount(){\n    this.checkIfLoggedIn(this.props.auth.payload.id)\n  }\n\n  render() {\n    const {\n      body,\n      comments_count,\n      created_at,\n      id,\n      title,\n      updated_at,\n      user,\n      user_id: userId,\n    } = this.props.postDetail;\n\n    const {auth} = this.props\n\n    console.log('auth in blogpost', auth)\n\n    return (\n      <div className=\"blogpost\">\n        <article>\n          <Time created_at={created_at} exactTime={true} />\n          <h1 dangerouslySetInnerHTML={{ __html: title }}></h1>\n          {/* <h1>{parse(title)}</h1> */}\n          <div\n            className=\"body-txt\"\n            dangerouslySetInnerHTML={{ __html: body }}\n          ></div>\n          <Time created_at={created_at} />\n          {/* <button>Read more</button> ==> new button comp */}\n        </article>\n\n        <aside>\n           <Userinfo \n            userId={userId}\n            imgUrl={{avatar: user.avatar, avatar_class: \"grid__item--img\"}}\n            firstName={user.first_name}\n            lastName={user.last_name}/>\n          <p>\n            <img src={commentIconDark} alt=\"\" className=\"comment-icon\" />\n            {comments_count} comments\n          </p>\n\n          {/* Check if user is logged in */}\n          {\n          (auth.user !== 'not set' && <Button btnText={`ADD COMMENT`} url={`/postdetail/${id}`} ref={'#comment-editor'}/>) ||\n          // Set non active + hover effect (login to add comment)\n          (auth.user === 'not set' && <Button btnText={'ADD COMMENT (to disable)'} CSS=\"disabled\" type='button' disabled/>)\n        }\n          <Button btnText={`SEE DETAILS`} url={`/postdetail/${id}`}/>\n\n          {/* \n          TODO :  DELETE \n          <Link to={`/postdetail/${id}`}>\n            SEE <br />\n            DETAILS\n          </Link> */}\n        </aside>\n\n        {/* MODIFYING SECTION (if logged in ...) */}\n        <p></p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {auth: state.auth}\n)\n\nconst mapDispatchToProps = dispatch => ({\n  \n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Blogpost)"]},"metadata":{},"sourceType":"module"}