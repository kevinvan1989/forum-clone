{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/IrakliJani\nimport moment from '../moment';\nexport default moment.defineLocale('ka', {\n  months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n  monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n  weekdays: {\n    standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n    format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n    isFormat: /(წინა|შემდეგ)/\n  },\n  weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n  weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[დღეს] LT[-ზე]',\n    nextDay: '[ხვალ] LT[-ზე]',\n    lastDay: '[გუშინ] LT[-ზე]',\n    nextWeek: '[შემდეგ] dddd LT[-ზე]',\n    lastWeek: '[წინა] dddd LT-ზე',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: function future(s) {\n      return s.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/, function ($0, $1, $2) {\n        return $2 === 'ი' ? $1 + 'ში' : $1 + $2 + 'ში';\n      });\n    },\n    past: function past(s) {\n      if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {\n        return s.replace(/(ი|ე)$/, 'ის წინ');\n      }\n\n      if (/წელი/.test(s)) {\n        return s.replace(/წელი$/, 'წლის წინ');\n      }\n\n      return s;\n    },\n    s: 'რამდენიმე წამი',\n    ss: '%d წამი',\n    m: 'წუთი',\n    mm: '%d წუთი',\n    h: 'საათი',\n    hh: '%d საათი',\n    d: 'დღე',\n    dd: '%d დღე',\n    M: 'თვე',\n    MM: '%d თვე',\n    y: 'წელი',\n    yy: '%d წელი'\n  },\n  dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n  ordinal: function ordinal(number) {\n    if (number === 0) {\n      return number;\n    }\n\n    if (number === 1) {\n      return number + '-ლი';\n    }\n\n    if (number < 20 || number <= 100 && number % 20 === 0 || number % 100 === 0) {\n      return 'მე-' + number;\n    }\n\n    return number + '-ე';\n  },\n  week: {\n    dow: 1,\n    doy: 7\n  }\n});","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/moment/dist/locale/ka.js"],"names":["moment","defineLocale","months","split","monthsShort","weekdays","standalone","format","isFormat","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","lastDay","nextWeek","lastWeek","sameElse","relativeTime","future","s","replace","$0","$1","$2","past","test","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","number","week","dow","doy"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,eAAeA,MAAM,CAACC,YAAP,CAAoB,IAApB,EAA0B;AACrCC,EAAAA,MAAM,EAAE,qGAAqGC,KAArG,CACJ,GADI,CAD6B;AAIrCC,EAAAA,WAAW,EAAE,kDAAkDD,KAAlD,CAAwD,GAAxD,CAJwB;AAKrCE,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAE,gEAAgEH,KAAhE,CACR,GADQ,CADN;AAINI,IAAAA,MAAM,EAAE,iEAAiEJ,KAAjE,CACJ,GADI,CAJF;AAONK,IAAAA,QAAQ,EAAE;AAPJ,GAL2B;AAcrCC,EAAAA,aAAa,EAAE,8BAA8BN,KAA9B,CAAoC,GAApC,CAdsB;AAerCO,EAAAA,WAAW,EAAE,uBAAuBP,KAAvB,CAA6B,GAA7B,CAfwB;AAgBrCQ,EAAAA,cAAc,EAAE;AACZC,IAAAA,EAAE,EAAE,OADQ;AAEZC,IAAAA,GAAG,EAAE,UAFO;AAGZC,IAAAA,CAAC,EAAE,YAHS;AAIZC,IAAAA,EAAE,EAAE,aAJQ;AAKZC,IAAAA,GAAG,EAAE,mBALO;AAMZC,IAAAA,IAAI,EAAE;AANM,GAhBqB;AAwBrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,gBADH;AAENC,IAAAA,OAAO,EAAE,gBAFH;AAGNC,IAAAA,OAAO,EAAE,iBAHH;AAINC,IAAAA,QAAQ,EAAE,uBAJJ;AAKNC,IAAAA,QAAQ,EAAE,mBALJ;AAMNC,IAAAA,QAAQ,EAAE;AANJ,GAxB2B;AAgCrCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,gBAAUC,CAAV,EAAa;AACjB,aAAOA,CAAC,CAACC,OAAF,CAAU,+BAAV,EAA2C,UAC9CC,EAD8C,EAE9CC,EAF8C,EAG9CC,EAH8C,EAIhD;AACE,eAAOA,EAAE,KAAK,GAAP,GAAaD,EAAE,GAAG,IAAlB,GAAyBA,EAAE,GAAGC,EAAL,GAAU,IAA1C;AACH,OANM,CAAP;AAOH,KATS;AAUVC,IAAAA,IAAI,EAAE,cAAUL,CAAV,EAAa;AACf,UAAI,4BAA4BM,IAA5B,CAAiCN,CAAjC,CAAJ,EAAyC;AACrC,eAAOA,CAAC,CAACC,OAAF,CAAU,QAAV,EAAoB,QAApB,CAAP;AACH;;AACD,UAAI,OAAOK,IAAP,CAAYN,CAAZ,CAAJ,EAAoB;AAChB,eAAOA,CAAC,CAACC,OAAF,CAAU,OAAV,EAAmB,UAAnB,CAAP;AACH;;AACD,aAAOD,CAAP;AACH,KAlBS;AAmBVA,IAAAA,CAAC,EAAE,gBAnBO;AAoBVO,IAAAA,EAAE,EAAE,SApBM;AAqBVC,IAAAA,CAAC,EAAE,MArBO;AAsBVC,IAAAA,EAAE,EAAE,SAtBM;AAuBVC,IAAAA,CAAC,EAAE,OAvBO;AAwBVC,IAAAA,EAAE,EAAE,UAxBM;AAyBVC,IAAAA,CAAC,EAAE,KAzBO;AA0BVC,IAAAA,EAAE,EAAE,QA1BM;AA2BVC,IAAAA,CAAC,EAAE,KA3BO;AA4BVC,IAAAA,EAAE,EAAE,QA5BM;AA6BVC,IAAAA,CAAC,EAAE,MA7BO;AA8BVC,IAAAA,EAAE,EAAE;AA9BM,GAhCuB;AAgErCC,EAAAA,sBAAsB,EAAE,6BAhEa;AAiErCC,EAAAA,OAAO,EAAE,iBAAUC,MAAV,EAAkB;AACvB,QAAIA,MAAM,KAAK,CAAf,EAAkB;AACd,aAAOA,MAAP;AACH;;AACD,QAAIA,MAAM,KAAK,CAAf,EAAkB;AACd,aAAOA,MAAM,GAAG,KAAhB;AACH;;AACD,QACIA,MAAM,GAAG,EAAT,IACCA,MAAM,IAAI,GAAV,IAAiBA,MAAM,GAAG,EAAT,KAAgB,CADlC,IAEAA,MAAM,GAAG,GAAT,KAAiB,CAHrB,EAIE;AACE,aAAO,QAAQA,MAAf;AACH;;AACD,WAAOA,MAAM,GAAG,IAAhB;AACH,GAhFoC;AAiFrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,CADH;AAEFC,IAAAA,GAAG,EAAE;AAFH;AAjF+B,CAA1B,CAAf","sourcesContent":["//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/IrakliJani\n\nimport moment from '../moment';\n\nexport default moment.defineLocale('ka', {\n    months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split(\n        '_'\n    ),\n    monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n    weekdays: {\n        standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split(\n            '_'\n        ),\n        format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split(\n            '_'\n        ),\n        isFormat: /(წინა|შემდეგ)/,\n    },\n    weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n    weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm',\n    },\n    calendar: {\n        sameDay: '[დღეს] LT[-ზე]',\n        nextDay: '[ხვალ] LT[-ზე]',\n        lastDay: '[გუშინ] LT[-ზე]',\n        nextWeek: '[შემდეგ] dddd LT[-ზე]',\n        lastWeek: '[წინა] dddd LT-ზე',\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: function (s) {\n            return s.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/, function (\n                $0,\n                $1,\n                $2\n            ) {\n                return $2 === 'ი' ? $1 + 'ში' : $1 + $2 + 'ში';\n            });\n        },\n        past: function (s) {\n            if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {\n                return s.replace(/(ი|ე)$/, 'ის წინ');\n            }\n            if (/წელი/.test(s)) {\n                return s.replace(/წელი$/, 'წლის წინ');\n            }\n            return s;\n        },\n        s: 'რამდენიმე წამი',\n        ss: '%d წამი',\n        m: 'წუთი',\n        mm: '%d წუთი',\n        h: 'საათი',\n        hh: '%d საათი',\n        d: 'დღე',\n        dd: '%d დღე',\n        M: 'თვე',\n        MM: '%d თვე',\n        y: 'წელი',\n        yy: '%d წელი',\n    },\n    dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n    ordinal: function (number) {\n        if (number === 0) {\n            return number;\n        }\n        if (number === 1) {\n            return number + '-ლი';\n        }\n        if (\n            number < 20 ||\n            (number <= 100 && number % 20 === 0) ||\n            number % 100 === 0\n        ) {\n            return 'მე-' + number;\n        }\n        return number + '-ე';\n    },\n    week: {\n        dow: 1,\n        doy: 7,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}