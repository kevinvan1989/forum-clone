{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/ProfilePage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getUserProfile } from \"../redux/actions/postsActions\";\n\nclass ProfilePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    // const { id } = this.props.match.params;\n    // API.get(`/api/users/${id}`).then((res) => {\n    //   console.log(\"detail\", res.data);\n    // });\n    const {\n      id\n    } = this.props.match.params;\n    this.props.getUsersDetails(id);\n    this.setState({\n      loading: !this.state.loading\n    });\n  }\n\n  render() {\n    const {\n      avatar,\n      blog_posts,\n      comments,\n      created_at,\n      favorite_color,\n      first_name,\n      last_name,\n      last_login_at\n    } = this.props.post.userDetails;\n    const {\n      loading\n    } = this.props.post;\n    console.log(\"prof page props\", this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, loading ? 'load' : 'go', \"* User profile page \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }\n    }), \"* User details  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }), \"*  Aantal comments (total) (\\xB0)  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }), \"* Aantal posts (total) (\\xB0)  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }), \"* posts van particular user (!!)  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 39\n      }\n    }), \"* posts waarop particular user heeft gecomment (!!)\");\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  post: state.posts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsersDetails: userId => dispatch(getUserProfile(userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/ProfilePage.js"],"names":["React","Component","connect","ClipLoader","getUserProfile","ProfilePage","state","loading","componentDidMount","id","props","match","params","getUsersDetails","setState","render","avatar","blog_posts","comments","created_at","favorite_color","first_name","last_name","last_login_at","post","userDetails","console","log","mapStateToProps","posts","mapDispatchToProps","dispatch","userId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,SAASC,cAAT,QAA+B,+BAA/B;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCK,KADkC,GAC1B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD0B;AAAA;;AAIlCC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AAEA;AACA;AACA;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AACA,SAAKF,KAAL,CAAWG,eAAX,CAA2BJ,EAA3B;AACA,SAAKK,QAAL,CAAc;AACZP,MAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADT,KAAd;AAGD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,UAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,UAJI;AAKJC,MAAAA,cALI;AAMJC,MAAAA,UANI;AAOJC,MAAAA,SAPI;AAQJC,MAAAA;AARI,QASF,KAAKb,KAAL,CAAWc,IAAX,CAAgBC,WATpB;AAWA,UAAM;AACJlB,MAAAA;AADI,QAEF,KAAKG,KAAL,CAAWc,IAFf;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKjB,KAAnC;AAGA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,OAAO,GAAG,MAAH,GAAY,IADtB,uCAIsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJtB,mCAKgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALhB,sDAMgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANhC,kDAO4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAP5B,qDAQkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARlC,wDADA;AAYD;;AAlDiC;;AAqDpC,MAAMqB,eAAe,GAAItB,KAAD,KAAY;AAClCkB,EAAAA,IAAI,EAAElB,KAAK,CAACuB;AADsB,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,eAAe,EAAGmB,MAAD,IAAYD,QAAQ,CAAC3B,cAAc,CAAC4B,MAAD,CAAf;AADG,CAAf,CAA3B;;AAIA,eAAe9B,OAAO,CAAC0B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CzB,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport { getUserProfile } from \"../redux/actions/postsActions\";\n\nclass ProfilePage extends Component {\n  state = {\n    loading: true\n  }\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    // const { id } = this.props.match.params;\n\n    // API.get(`/api/users/${id}`).then((res) => {\n    //   console.log(\"detail\", res.data);\n    // });\n\n    const { id } = this.props.match.params;\n    this.props.getUsersDetails(id);\n    this.setState({\n      loading: !this.state.loading\n    })\n  }\n\n  render() {\n    const {\n      avatar,\n      blog_posts,\n      comments,\n      created_at,\n      favorite_color,\n      first_name,\n      last_name,\n      last_login_at,\n    } = this.props.post.userDetails;\n\n    const {\n      loading\n    } = this.props.post\n\n    console.log(\"prof page props\",this.props);\n\n    \n    return (\n    <div>\n      {loading ? 'load' : 'go'}\n\n\n      * User profile page <br/>\n    * User details  <br/>\n    *  Aantal comments (total) (°)  <br/>\n    * Aantal posts (total) (°)  <br/>\n    * posts van particular user (!!)  <br/>\n    * posts waarop particular user heeft gecomment (!!)\n    </div>);\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  post: state.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUsersDetails: (userId) => dispatch(getUserProfile(userId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\n"]},"metadata":{},"sourceType":"module"}