{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/Overview.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPost } from \"../redux/actions/postsActions\";\nimport Blogpost from \"../components/Blogpost\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport CreatePostBtn from \"./CreatePostBtn\";\nimport { getUser } from \"../redux/actions/authActions\";\n\nclass Overview extends Component {\n  componentDidMount() {\n    this.props.getPosts(this.props.postData);\n    this.props.getUser();\n    console.log(\"props in overview\", this.props);\n  }\n\n  render() {\n    const {\n      postData,\n      userAuthorized\n    } = this.props; //console.log('postData in overview', postData.last_page, postData.current_page)\n\n    console.log(\"postdata in overview\", postData);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, userAuthorized.user !== \"not set\" && /*#__PURE__*/React.createElement(CreatePostBtn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 52\n      }\n    })), postData.posts ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, postData.posts.map(post => /*#__PURE__*/React.createElement(Blogpost, {\n      postDetail: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }))) : /*#__PURE__*/React.createElement(ClipLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  postData: state.posts,\n  userAuthorized: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPosts: page => dispatch(fetchPost(page)),\n  getUser: () => dispatch(getUser)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/Overview.js"],"names":["React","Component","connect","fetchPost","Blogpost","ClipLoader","CreatePostBtn","getUser","Overview","componentDidMount","props","getPosts","postData","console","log","render","userAuthorized","user","posts","map","post","mapStateToProps","state","auth","mapDispatchToProps","dispatch","page"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,8BAAxB;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC/BQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKD,KAAL,CAAWE,QAA/B;AACA,SAAKF,KAAL,CAAWH,OAAX;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKJ,KAAtC;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,QAAF;AAAYI,MAAAA;AAAZ,QAA+B,KAAKN,KAA1C,CADO,CAEP;;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,QAApC;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMI,cAAc,CAACC,IAAf,KAAwB,SAAxB,iBAAqC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3C,CADF,EAEGL,QAAQ,CAACM,KAAT,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,QAAQ,CAACM,KAAT,CAAeC,GAAf,CAAoBC,IAAD,iBAClB,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAEA,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADD,gBAOC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADF;AAcD;;AA3B8B;;AA8BjC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,QAAQ,EAAEU,KAAK,CAACJ,KADkB;AAElCF,EAAAA,cAAc,EAAEM,KAAK,CAACC;AAFY,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCd,EAAAA,QAAQ,EAAGe,IAAD,IAAUD,QAAQ,CAACtB,SAAS,CAACuB,IAAD,CAAV,CADY;AAExCnB,EAAAA,OAAO,EAAE,MAAMkB,QAAQ,CAAClB,OAAD;AAFiB,CAAf,CAA3B;;AAKA,eAAeL,OAAO,CAACmB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPost } from \"../redux/actions/postsActions\";\nimport Blogpost from \"../components/Blogpost\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport CreatePostBtn from \"./CreatePostBtn\";\nimport { getUser } from \"../redux/actions/authActions\";\n\nclass Overview extends Component {\n  componentDidMount() {\n    this.props.getPosts(this.props.postData);\n    this.props.getUser();\n    console.log(\"props in overview\", this.props);\n  }\n\n  render() {\n    const { postData, userAuthorized } = this.props;\n    //console.log('postData in overview', postData.last_page, postData.current_page)\n\n    console.log(\"postdata in overview\", postData);\n\n    return (\n      <div>\n        <div>{userAuthorized.user !== \"not set\" && <CreatePostBtn />}</div>\n        {postData.posts ? (\n          <div>\n            {postData.posts.map((post) => (\n              <Blogpost postDetail={post} />\n            ))}\n          </div>\n        ) : (\n          <ClipLoader />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  postData: state.posts,\n  userAuthorized: state.auth\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getPosts: (page) => dispatch(fetchPost(page)),\n  getUser: () => dispatch(getUser),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);\n"]},"metadata":{},"sourceType":"module"}