{"ast":null,"code":"const initialState = {\n  current_page: 1,\n  posts: [{\n    body: \"<p></p>\",\n    comments_count: 0,\n    created_at: \"2020-06-08 16:32:47\",\n    id: 767,\n    likes_count: 0,\n    title: \"Well\",\n    updated_at: \"2020-06-08 16:32:47\",\n    user: {\n      avatar: \"undefinedparel@pot.com\",\n      created_at: \"2020-06-08 16:23:03\",\n      email: \"parel@pot.com\",\n      email_verified_at: null,\n      favorite_color: \"#9c27b0\",\n      first_name: \"parel\",\n      id: 149,\n      last_login_at: \"2020-06-08 16:33:26\",\n      last_name: \"pot\",\n      updated_at: \"2020-06-08 16:33:26\"\n    }\n  }],\n  postDetail: {},\n  particularComment: \"\",\n  // Init values to prevent destructure probs\n  userDetails: {\n    avatar: ' ',\n    blog_posts: [],\n    comments: ' ',\n    created_at: ' ',\n    favorite_color: ' ',\n    first_name: ' ',\n    last_name: ' ',\n    last_login_at: ' '\n  },\n  loading: true\n};\n\nconst postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_DATA\":\n      return {\n        // Get the 'current_page' element out of data/payload\n        current_page: action.payload.current_page,\n        // Last page\n        last_page: action.payload.last_page,\n        // Get the list of posts out of data/payload\n        posts: action.payload.data\n      };\n\n    case \"ADD_COMMENT\":\n      {\n        return { ...state,\n          particularComment: action.payload\n        };\n      }\n\n    case \"ADD_NEW_POST\":\n      return action.payload;\n\n    case \"SHOW_DETAIL\":\n      return { ...state,\n        postDetail: action.payload\n      };\n\n    case \"SET_USER_DETAILS\":\n      return { ...state,\n        loading: false,\n        userDetails: action.payload\n      };\n    // TODO fix redux actions / reducers\n\n    case \"DELETE\":\n      const posts = { ...state.posts\n      };\n      const postId = action.payload;\n      console.log(posts); // return{}\n\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postsReducer;","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/redux/reducers/postsReducer.js"],"names":["initialState","current_page","posts","body","comments_count","created_at","id","likes_count","title","updated_at","user","avatar","email","email_verified_at","favorite_color","first_name","last_login_at","last_name","postDetail","particularComment","userDetails","blog_posts","comments","loading","postsReducer","state","action","type","payload","last_page","data","postId","console","log"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,CADK;AAEnBC,EAAAA,KAAK,EAAE,CAAC;AACNC,IAAAA,IAAI,EAAE,SADA;AAEVC,IAAAA,cAAc,EAAE,CAFN;AAGVC,IAAAA,UAAU,EAAE,qBAHF;AAIVC,IAAAA,EAAE,EAAE,GAJM;AAKVC,IAAAA,WAAW,EAAE,CALH;AAMVC,IAAAA,KAAK,EAAE,MANG;AAOVC,IAAAA,UAAU,EAAE,qBAPF;AAQVC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,wBADJ;AAENN,MAAAA,UAAU,EAAE,qBAFN;AAGNO,MAAAA,KAAK,EAAE,eAHD;AAINC,MAAAA,iBAAiB,EAAE,IAJb;AAKNC,MAAAA,cAAc,EAAE,SALV;AAMNC,MAAAA,UAAU,EAAE,OANN;AAONT,MAAAA,EAAE,EAAE,GAPE;AAQNU,MAAAA,aAAa,EAAE,qBART;AASNC,MAAAA,SAAS,EAAE,KATL;AAUNR,MAAAA,UAAU,EAAE;AAVN;AARI,GAAD,CAFY;AAwBnBS,EAAAA,UAAU,EAAE,EAxBO;AAyBnBC,EAAAA,iBAAiB,EAAE,EAzBA;AA0BnB;AACAC,EAAAA,WAAW,EAAE;AACXT,IAAAA,MAAM,EAAE,GADG;AAEXU,IAAAA,UAAU,EAAE,EAFD;AAGXC,IAAAA,QAAQ,EAAE,GAHC;AAIXjB,IAAAA,UAAU,EAAE,GAJD;AAKXS,IAAAA,cAAc,EAAE,GALL;AAMXC,IAAAA,UAAU,EAAE,GAND;AAOXE,IAAAA,SAAS,EAAE,GAPA;AAQXD,IAAAA,aAAa,EAAE;AARJ,GA3BM;AAqCnBO,EAAAA,OAAO,EAAE;AArCU,CAArB;;AAwCA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGzB,YAAT,EAAuB0B,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO;AACL;AACA1B,QAAAA,YAAY,EAAEyB,MAAM,CAACE,OAAP,CAAe3B,YAFxB;AAGL;AACA4B,QAAAA,SAAS,EAAEH,MAAM,CAACE,OAAP,CAAeC,SAJrB;AAKL;AACA3B,QAAAA,KAAK,EAAEwB,MAAM,CAACE,OAAP,CAAeE;AANjB,OAAP;;AASF,SAAK,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGL,KADE;AAELN,UAAAA,iBAAiB,EAAEO,MAAM,CAACE;AAFrB,SAAP;AAID;;AAED,SAAK,cAAL;AACE,aAAOF,MAAM,CAACE,OAAd;;AAEF,SAAK,aAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYP,QAAAA,UAAU,EAAEQ,MAAM,CAACE;AAA/B,OAAP;;AAEF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,OAAO,EAAE,KAFJ;AAGLH,QAAAA,WAAW,EAAEM,MAAM,CAACE;AAHf,OAAP;AAMA;;AACA,SAAK,QAAL;AACE,YAAM1B,KAAK,GAAG,EAAC,GAAGuB,KAAK,CAACvB;AAAV,OAAd;AACA,YAAM6B,MAAM,GAAGL,MAAM,CAACE,OAAtB;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAY/B,KAAZ,EALF,CAQE;;AAGA,aAAM,EACJ,GAAGuB;AADC,OAAN;;AAIJ;AACE,aAAOA,KAAP;AAhDJ;AAkDD,CAnDD;;AAqDA,eAAeD,YAAf","sourcesContent":["const initialState = {\n  current_page: 1,\n  posts: [{\n    body: \"<p></p>\",\ncomments_count: 0,\ncreated_at: \"2020-06-08 16:32:47\",\nid: 767,\nlikes_count: 0,\ntitle: \"Well\",\nupdated_at: \"2020-06-08 16:32:47\",\nuser: {\n  avatar: \"undefinedparel@pot.com\",\ncreated_at: \"2020-06-08 16:23:03\",\nemail: \"parel@pot.com\",\nemail_verified_at: null,\nfavorite_color: \"#9c27b0\",\nfirst_name: \"parel\",\nid: 149,\nlast_login_at: \"2020-06-08 16:33:26\",\nlast_name: \"pot\",\nupdated_at: \"2020-06-08 16:33:26\"\n}\n\n  }],\n  postDetail: {},\n  particularComment: \"\",\n  // Init values to prevent destructure probs\n  userDetails: {\n    avatar: ' ',\n    blog_posts: [],\n    comments: ' ',\n    created_at: ' ',\n    favorite_color: ' ',\n    first_name: ' ',\n    last_name: ' ',\n    last_login_at: ' '\n  },\n  loading: true\n};\n\nconst postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_DATA\":\n      return {\n        // Get the 'current_page' element out of data/payload\n        current_page: action.payload.current_page,\n        // Last page\n        last_page: action.payload.last_page,\n        // Get the list of posts out of data/payload\n        posts: action.payload.data,\n      };\n\n    case \"ADD_COMMENT\": {\n      return {\n        ...state,\n        particularComment: action.payload,\n      };\n    }\n\n    case \"ADD_NEW_POST\":\n      return action.payload;\n\n    case \"SHOW_DETAIL\":\n      return { ...state, postDetail: action.payload };\n\n    case \"SET_USER_DETAILS\":\n      return {\n        ...state,\n        loading: false,\n        userDetails: action.payload,\n      };\n\n      // TODO fix redux actions / reducers\n      case \"DELETE\":\n        const posts = {...state.posts}\n        const postId = action.payload\n\n\n        console.log(posts)\n        \n\n        // return{}\n\n     \n        return{\n          ...state\n        }\n\n    default:\n      return state;\n  }\n};\n\nexport default postsReducer;\n"]},"metadata":{},"sourceType":"module"}