{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/ProfilePage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getUserProfile } from \"../redux/actions/postsActions\";\nimport moment from \"moment\";\nimport BlogpostProfile from \"../components/BlogpostProfile\";\nimport Button from \"../components/Button\";\n\nclass ProfilePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    // const { id } = this.props.match.params;\n    // API.get(`/api/users/${id}`).then((res) => {\n    //   console.log(\"detail\", res.data);\n    // });\n    const {\n      id\n    } = this.props.match.params;\n    this.props.getUsersDetails(id);\n    this.setState({\n      loading: !this.state.loading\n    });\n  }\n\n  render() {\n    // const {\n    //   avatar,\n    //   blog_posts,\n    //   comments,\n    //   created_at,\n    //   favorite_color,\n    //   first_name,\n    //   last_name,\n    //   last_login_at,\n    // } = this.props.post.userDetails;\n    const {\n      loading\n    } = this.state;\n    const {\n      userDetails\n    } = this.props.post;\n    console.log(\"prof page props\", this.props.auth, 'userdet', userDetails);\n    const {\n      id: userId\n    } = this.props.auth;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, !loading && userDetails ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }\n    }, userId === userDetails.id && /*#__PURE__*/React.createElement(Button, {\n      url: `/edit-profile/${userId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: userDetails.avatar,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }\n    }, `${userDetails.first_name} ${userDetails.last_name}`), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }\n    }, \"Member since: \", moment(userDetails.created_at).format(\"YYYY-MM-DD\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"badge badge-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }\n    }, userDetails.comments.length), \" \", \"comments\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"badge badge-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }\n    }, userDetails.blog_posts.length), \" \", \"blog posts\"))), \" \")), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 12\n      }\n    }, \"All blog posts of \", userDetails.first_name), userDetails.blog_posts.map(post => /*#__PURE__*/React.createElement(BlogpostProfile, {\n      blogPost: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }\n    })))) : /*#__PURE__*/React.createElement(ClipLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  post: state.posts,\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsersDetails: userId => dispatch(getUserProfile(userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/ProfilePage.js"],"names":["React","Component","connect","ClipLoader","getUserProfile","moment","BlogpostProfile","Button","ProfilePage","state","loading","componentDidMount","id","props","match","params","getUsersDetails","setState","render","userDetails","post","console","log","auth","userId","avatar","first_name","last_name","created_at","format","comments","length","blog_posts","map","mapStateToProps","posts","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getUserProfile } from \"../redux/actions/postsActions\";\nimport moment from \"moment\";\nimport BlogpostProfile from \"../components/BlogpostProfile\";\nimport Button from \"../components/Button\";\n\nclass ProfilePage extends Component {\n  state = {\n    loading: true\n  };\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    // const { id } = this.props.match.params;\n\n    // API.get(`/api/users/${id}`).then((res) => {\n    //   console.log(\"detail\", res.data);\n    // });\n\n    const { id } = this.props.match.params;\n    this.props.getUsersDetails(id);\n    this.setState({\n      loading: !this.state.loading\n    });\n  }\n\n  render() {\n    // const {\n    //   avatar,\n    //   blog_posts,\n    //   comments,\n    //   created_at,\n    //   favorite_color,\n    //   first_name,\n    //   last_name,\n    //   last_login_at,\n    // } = this.props.post.userDetails;\n\n   \n\n    const { loading } = this.state;\n    const { userDetails } = this.props.post;\n\n    console.log(\"prof page props\", this.props.auth, 'userdet', userDetails);\n    const {id: userId} = this.props.auth\n    return (\n      <div>\n        {!loading && userDetails ? (\n         <div>\n         {/* header */}\n         <section>\n           {userId === userDetails.id && <Button url={`/edit-profile/${userId}`}/>}\n           <div>\n             <img src={userDetails.avatar} alt=\"\" />\n           </div>\n           <div>\n             <h2>{`${userDetails.first_name} ${userDetails.last_name}`}</h2>\n             <h3>Member since: {moment(userDetails.created_at).format(\"YYYY-MM-DD\")}</h3>\n             {/* data totals of user */}\n             <div>\n               <div>\n                 <h3>\n                   <span class=\"badge badge-secondary\">\n                     {userDetails.comments.length}\n                   </span>{\" \"}\n                   comments\n                 </h3>\n               </div>\n               <div>\n                 <h3>\n                   <span class=\"badge badge-secondary\">\n                     {userDetails.blog_posts.length}\n                   </span>{\" \"}\n                   blog posts\n                 </h3>\n               </div>\n             </div>{\" \"}\n             {/* end of data */}\n           </div>\n         </section>\n\n         <section>\n           <h2>All blog posts of {userDetails.first_name}</h2>\n           {userDetails.blog_posts.map(post => (\n             <BlogpostProfile blogPost={post} />\n           ))}\n\n\n         </section>\n       </div>\n         \n         \n        ) : (\n          <ClipLoader />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  post: state.posts,\n  auth: state.auth\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUsersDetails: (userId) => dispatch(getUserProfile(userId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\n"]},"metadata":{},"sourceType":"module"}