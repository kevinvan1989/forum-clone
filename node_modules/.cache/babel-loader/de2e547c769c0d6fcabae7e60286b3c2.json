{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/Login.js\";\nimport React, { Component } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { API } from \"../libs/API\";\nimport { getUser } from \"../redux/actions/authActions\";\nimport { connect } from \"react-redux\";\nimport LoginForm from \"../components/Forms/LoginForm\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirect: false\n    };\n\n    this.clearInput = () => {\n      const inputEl = document.querySelectorAll(\".inputField\");\n      inputEl.forEach(el => {\n        el.value = '';\n      });\n    };\n\n    this.handleLogin = values => {\n      API.post('oauth/token', {\n        'grant_type': 'password',\n        'client_id': 2,\n        'client_secret': 'iwrHFPcaiQ3bZTzHEwQpYkpiuHUlbIOJ9SAI6DLI',\n        \"username\": values.LOGIN_email,\n        \"password\": values.LOGIN_password\n      }).then(response => {\n        window.localStorage.setItem('_DEMO_TOKEN', response.data.access_token); // Object.assign(API.defaults, {\n        //   headers: { authorization: 'Bearer' + response.data.access_token}\n        // })\n\n        API.defaults.headers.common[\"Authorization\"] = \"Bearer \" + response.data.access_token;\n        API.get(\"/api/posts\").then(response => {}); // De header wordt ingesteld hierboven. Daarna kunnen de gegevens worden opgehaald\n\n        this.props.getUserInfo();\n        this.setState({\n          redirect: true\n        });\n      }); //END of .then()\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, !this.state.redirect ? /*#__PURE__*/React.createElement(Formik, {\n      onSubmit: this.handleLogin,\n      initialValues: {\n        LOGIN_email: \"\",\n        LOGIN_password: \"\"\n      } // Check for password validation\n      ,\n      validationSchema: Yup.object({\n        LOGIN_email: Yup.string().required(\"required\"),\n        LOGIN_password: Yup.string() // .matches(\n        //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&])$/,\n        //   \"Must contain at least 1 cap, 1 digit & 1 spec char\"\n        // )\n        .min(8).required(\"required\")\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, props => /*#__PURE__*/React.createElement(LoginForm, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }))) : /*#__PURE__*/React.createElement(Redirect, {\n      to: '/overview',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userInfo: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUserInfo: () => dispatch(getUser)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/Login.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","API","getUser","connect","LoginForm","Redirect","Login","state","redirect","clearInput","inputEl","document","querySelectorAll","forEach","el","value","handleLogin","values","post","LOGIN_email","LOGIN_password","then","response","window","localStorage","setItem","data","access_token","defaults","headers","common","get","props","getUserInfo","setState","render","object","string","required","min","mapStateToProps","userInfo","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { API } from \"../libs/API\";\nimport { getUser } from \"../redux/actions/authActions\"\nimport {connect} from \"react-redux\"\nimport LoginForm from \"../components/Forms/LoginForm\";\nimport { Redirect } from \"react-router-dom\";\n\n\n\nclass Login extends Component {  \n  state = {\n    redirect: false\n  }\n\n  clearInput = () => {\n    const inputEl = document.querySelectorAll(\".inputField\");\n    inputEl.forEach((el) => {\n      el.value = ''\n    });\n  };\n\n  handleLogin = (values) => {\n    \n    API.post('oauth/token', {\n            'grant_type': 'password',\n            'client_id': 2,\n            'client_secret': 'iwrHFPcaiQ3bZTzHEwQpYkpiuHUlbIOJ9SAI6DLI',\n            \"username\": values.LOGIN_email,\n            \"password\": values.LOGIN_password\n    }).then(response => {\n      window.localStorage.setItem('_DEMO_TOKEN', response.data.access_token)\n\n      // Object.assign(API.defaults, {\n      //   headers: { authorization: 'Bearer' + response.data.access_token}\n      // })\n\n      API.defaults.headers.common[\"Authorization\"] =\n          \"Bearer \" + response.data.access_token;\n          \n      API.get(\"/api/posts\").then((response) => {\n      });\n\n      // De header wordt ingesteld hierboven. Daarna kunnen de gegevens worden opgehaald\n      this.props.getUserInfo();\n\n      this.setState({redirect: true})\n      \n    }) //END of .then()\n\n    \n  };\n\n  render() {\n    return (\n      \n      <div>\n        {!this.state.redirect ? <Formik\n          onSubmit={this.handleLogin}\n          initialValues={{\n            LOGIN_email: \"\",\n            LOGIN_password: \"\"\n          }}\n          // Check for password validation\n          validationSchema={Yup.object({\n            LOGIN_email: Yup.string().required(\"required\"),\n\n            LOGIN_password: Yup.string()\n              // .matches(\n              //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&])$/,\n              //   \"Must contain at least 1 cap, 1 digit & 1 spec char\"\n              // )\n              .min(8)\n              .required(\"required\"),\n          })}\n        >\n\n          {/* <Form>\n            <Formgroup\n              type=\"email\"\n              typeOfInfo=\"LOGIN_email\"\n              title=\"Email\"\n            />\n\n            <Formgroup \n              type=\"password\" \n              typeOfInfo=\"LOGIN_password\" \n              title=\"Password\" \n            />\n\n            <button type=\"submit\">Login</button>\n          </Form> */}\n\n          {props => <LoginForm {...props} />}\n        </Formik> : <Redirect to={'/overview'}/>}\n        \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    userInfo: state.auth\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getUserInfo : () => dispatch(getUser)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n"]},"metadata":{},"sourceType":"module"}