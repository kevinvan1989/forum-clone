{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/components/EditPost.js\";\nimport React, { Component } from 'react';\nimport { API } from '../libs/API';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport PostTextEditor from \"./PostTextEditor\";\nexport default class EditPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      body: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      idPost: id\n    } = this.props.match.params;\n    API.get(`/api/posts/${id}`).then(response => {\n      console.log(response);\n      this.setState({\n        title: response.data.title,\n        body: response.data.body\n      });\n    });\n  }\n\n  render() {\n    console.log('prps', this.props.match.params);\n    console.log(this.state);\n    const {\n      title,\n      body\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      onSubmit: this.handleSubmitCreate,\n      initialValues: {\n        CREATE_POST_title: title,\n        // D.m.v. deze keys worden values opgehaald in <Field>\n        CREATE_POST_editor: 'init value Formik'\n      } // Input and give feedback / errors\n      ,\n      validationSchema: Yup.object({}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, props => /*#__PURE__*/React.createElement(PostTextEditor, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/components/EditPost.js"],"names":["React","Component","API","Formik","Yup","PostTextEditor","EditPost","state","title","body","componentDidMount","idPost","id","props","match","params","get","then","response","console","log","setState","data","render","handleSubmitCreate","CREATE_POST_title","CREATE_POST_editor","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,QAAkB,aAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC5CM,KAD4C,GACpC;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,IAAI,EAAE;AAFF,KADoC;AAAA;;AAM5CC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA,MAAM,EAAEC;AAAT,QAAe,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAtC;AACAb,IAAAA,GAAG,CAACc,GAAJ,CAAS,cAAaJ,EAAG,EAAzB,EAA4BK,IAA5B,CACIC,QAAQ,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AACVb,QAAAA,KAAK,EAAEU,QAAQ,CAACI,IAAT,CAAcd,KADX;AAEVC,QAAAA,IAAI,EAAES,QAAQ,CAACI,IAAT,CAAcb;AAFV,OAAd;AAIH,KAPL;AASH;;AAGDc,EAAAA,MAAM,GAAG;AACLJ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKP,KAAL,CAAWC,KAAX,CAAiBC,MAArC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACA,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgB,KAAKF,KAA3B;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACN,MAAA,QAAQ,EAAE,KAAKiB,kBADT;AAEN,MAAA,aAAa,EAAE;AACbC,QAAAA,iBAAiB,EAAEjB,KADN;AAEb;AACAkB,QAAAA,kBAAkB,EAAE;AAHP,OAFT,CAON;AAPM;AAQN,MAAA,gBAAgB,EAAEtB,GAAG,CAACuB,MAAJ,CAAW,EAAX,CARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAULd,KAAK,iBAAI,oBAAC,cAAD,oBAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAVJ,CADJ,CADJ;AAgBH;;AAzC2C","sourcesContent":["import React, { Component } from 'react'\nimport {API} from '../libs/API'\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport PostTextEditor from \"./PostTextEditor\";\n\nexport default class EditPost extends Component {\n    state = {\n        title: '',\n        body: ''\n    }\n\n    componentDidMount(){\n        const {idPost: id} = this.props.match.params\n        API.get(`/api/posts/${id}`).then(\n            response => {\n                console.log(response)\n                this.setState({\n                    title: response.data.title,\n                    body: response.data.body\n                })\n            }\n        )\n    }\n    \n    \n    render() {\n        console.log('prps', this.props.match.params)\n        console.log(this.state)\n        const {title, body} = this.state\n\n        return (\n            <div>\n                <Formik\n          onSubmit={this.handleSubmitCreate}\n          initialValues={{\n            CREATE_POST_title: title,\n            // D.m.v. deze keys worden values opgehaald in <Field>\n            CREATE_POST_editor: 'init value Formik'\n          }}\n          // Input and give feedback / errors\n          validationSchema={Yup.object({})}\n        >\n          {props => <PostTextEditor {...props} />}\n        </Formik>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}