{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/ProfilePage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getUserProfile } from \"../redux/actions/postsActions\";\nimport moment from \"moment\";\nimport Blogpost from \"../components/Blogpost\";\nimport BlogpostProfile from \"../components/BlogpostProfile\";\n\nclass ProfilePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    // const { id } = this.props.match.params;\n    // API.get(`/api/users/${id}`).then((res) => {\n    //   console.log(\"detail\", res.data);\n    // });\n    const {\n      id\n    } = this.props.match.params;\n    this.props.getUsersDetails(id);\n    this.setState({\n      loading: !this.state.loading\n    });\n  }\n\n  render() {\n    const {\n      avatar,\n      blog_posts,\n      comments,\n      created_at,\n      favorite_color,\n      first_name,\n      last_name,\n      last_login_at\n    } = this.props.post.userDetails;\n    const {\n      loading\n    } = this.props.post;\n    console.log(\"prof page props\", this.props.post.userDetails);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(ClipLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatar,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, `${first_name} ${last_name}`), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Member since: \", moment(created_at).format(\"YYYY-MM-DD\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"# comments\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, comments.length)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"# blog posts\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, blog_posts.length))), \" \")), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"All blog posts\"), blog_posts.map(post => /*#__PURE__*/React.createElement(BlogpostProfile, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 18\n      }\n    }))), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, \"All comments of \", first_name))), \"* User profile page \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }), \"* User details \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 24\n      }\n    }), \"* Aantal comments (total) (\\xB0) \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 39\n      }\n    }), \"* Aantal posts (total) (\\xB0) \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 36\n      }\n    }), \"* posts van particular user (!!) \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 42\n      }\n    }), \"* posts waarop particular user heeft gecomment (!!)\");\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  post: state.posts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsersDetails: userId => dispatch(getUserProfile(userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/ProfilePage.js"],"names":["React","Component","connect","ClipLoader","getUserProfile","moment","Blogpost","BlogpostProfile","ProfilePage","state","loading","componentDidMount","id","props","match","params","getUsersDetails","setState","render","avatar","blog_posts","comments","created_at","favorite_color","first_name","last_name","last_login_at","post","userDetails","console","log","format","length","map","mapStateToProps","posts","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getUserProfile } from \"../redux/actions/postsActions\";\nimport moment from \"moment\";\nimport Blogpost from \"../components/Blogpost\";\nimport BlogpostProfile from \"../components/BlogpostProfile\";\n\nclass ProfilePage extends Component {\n  state = {\n    loading: true,\n  };\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    // const { id } = this.props.match.params;\n\n    // API.get(`/api/users/${id}`).then((res) => {\n    //   console.log(\"detail\", res.data);\n    // });\n\n    const { id } = this.props.match.params;\n    this.props.getUsersDetails(id);\n    this.setState({\n      loading: !this.state.loading,\n    });\n  }\n\n  render() {\n    const {\n      avatar,\n      blog_posts,\n      comments,\n      created_at,\n      favorite_color,\n      first_name,\n      last_name,\n      last_login_at,\n    } = this.props.post.userDetails;\n\n    const { loading } = this.props.post;\n\n    console.log(\"prof page props\", this.props.post.userDetails);\n\n    return (\n      <div>\n        {loading ? (\n          <ClipLoader />\n        ) : (\n          <div>\n            {/* header */}\n            <section>\n              <div>\n                <img src={avatar} alt=\"\" />\n              </div>\n              <div>\n                <h2>{`${first_name} ${last_name}`}</h2>\n                <h3>Member since: {moment(created_at).format(\"YYYY-MM-DD\")}</h3>\n                {/* data totals of user */}\n                <div>\n                  <div>\n                    <h3># comments</h3>\n                    <p>{comments.length}</p>\n                  </div>\n                  <div>\n                    <h3># blog posts</h3>\n                    <p>{blog_posts.length}</p>\n                  </div>\n                </div> {/* end of data */}\n              </div>\n            </section>\n\n            <section>\n              <h2>All blog posts</h2>\n              { blog_posts.map(post => (\n                 <BlogpostProfile post={post}/>\n              )) }\n            </section>\n            <section>\n              <h2>All comments of {first_name}</h2>\n            </section>\n          </div>\n        )}\n        * User profile page <br />\n        * User details <br />\n        * Aantal comments (total) (°) <br />\n        * Aantal posts (total) (°) <br />\n        * posts van particular user (!!) <br />* posts waarop particular user\n        heeft gecomment (!!)\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  post: state.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUsersDetails: (userId) => dispatch(getUserProfile(userId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\n"]},"metadata":{},"sourceType":"module"}