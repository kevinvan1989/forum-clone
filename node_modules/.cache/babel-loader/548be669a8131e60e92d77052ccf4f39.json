{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/components/CreatePost.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport PostTextEditor from \"./PostTextEditor\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\nimport { addNewPost } from \"../redux/actions/postsActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreatePost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirect: false\n    };\n\n    this.setRedict = () => {\n      this.setState({\n        redirect: true\n      });\n      console.log(this.state);\n    };\n\n    this.handleSubmitCreate = values => {\n      this.props.createPost(values);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      onSubmit: this.handleSubmitCreate,\n      initialValues: {\n        POST_title: 'test',\n        // D.m.v. deze keys worden values opgehaald in <Field>\n        POST_editor: 'init value Formik'\n      } // Input and give feedback / errors\n      ,\n      validationSchema: Yup.object({}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, props => /*#__PURE__*/React.createElement(PostTextEditor, Object.assign({}, props, {\n      initValueName: \"CREATE_POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  createPost: post => dispatch(addNewPost(post))\n});\n\nexport default connect(undefined, mapDispatchToProps)(CreatePost);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/components/CreatePost.js"],"names":["React","Component","Formik","PostTextEditor","Yup","connect","addNewPost","Redirect","CreatePost","state","redirect","setRedict","setState","console","log","handleSubmitCreate","values","props","createPost","render","POST_title","POST_editor","object","mapDispatchToProps","dispatch","post","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEC,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAClCQ,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD0B;;AAAA,SAKlCC,SALkC,GAKtB,MAAI;AACd,WAAKC,QAAL,CAAc;AAACF,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACD,KARiC;;AAAA,SAUlCM,kBAVkC,GAUbC,MAAM,IAAI;AAC7B,WAAKC,KAAL,CAAWC,UAAX,CAAsBF,MAAtB;AAED,KAbiC;AAAA;;AAelCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKJ,kBADjB;AAEE,MAAA,aAAa,EAAE;AACbK,QAAAA,UAAU,EAAE,MADC;AAEb;AACAC,QAAAA,WAAW,EAAE;AAHA,OAFjB,CAOE;AAPF;AAQE,MAAA,gBAAgB,EAAEjB,GAAG,CAACkB,MAAJ,CAAW,EAAX,CARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUGL,KAAK,iBAAI,oBAAC,cAAD,oBAAoBA,KAApB;AAA2B,MAAA,aAAa,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAVZ,CADF,CADF;AAgBD;;AAhCiC;;AAmCpC,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACtCN,EAAAA,UAAU,EAAEO,IAAI,IAAID,QAAQ,CAAClB,UAAU,CAACmB,IAAD,CAAX;AADU,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAACqB,SAAD,EAAYH,kBAAZ,CAAP,CAAuCf,UAAvC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport PostTextEditor from \"./PostTextEditor\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\nimport { addNewPost } from \"../redux/actions/postsActions\";\nimport { Redirect } from \"react-router-dom\";\n\n class CreatePost extends Component {\n  state = {\n    redirect: false\n  }\n\n  setRedict = ()=>{\n    this.setState({redirect: true})\n    console.log(this.state)\n  }\n  \n  handleSubmitCreate = values => {\n    this.props.createPost(values);\n    \n  }\n\n  render() {\n    return (\n      <div>\n        <Formik\n          onSubmit={this.handleSubmitCreate}\n          initialValues={{\n            POST_title: 'test',\n            // D.m.v. deze keys worden values opgehaald in <Field>\n            POST_editor: 'init value Formik'\n          }}\n          // Input and give feedback / errors\n          validationSchema={Yup.object({})}\n        >\n          {props => <PostTextEditor {...props} initValueName='CREATE_POST'/>}\n        </Formik>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  createPost: post => dispatch(addNewPost(post))\n} )\n\nexport default connect(undefined, mapDispatchToProps)(CreatePost)"]},"metadata":{},"sourceType":"module"}