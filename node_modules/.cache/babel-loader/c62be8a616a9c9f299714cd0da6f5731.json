{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/EditPost.js\";\nimport React, { Component } from \"react\";\nimport { API } from \"../libs/API\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport PostTextEditor from \"../components/PostTextEditor\";\nimport { editPost } from \"../redux/actions/postsActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass EditPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      body: \"\",\n      loading: true\n    };\n\n    this.handleSubmitCreate = (values, postId) => {\n      this.props.edit(values, this.props.match.params.idPost);\n      window.location.href(\"/overview/1\");\n    };\n  }\n\n  componentDidMount() {\n    const {\n      idPost: id\n    } = this.props.match.params;\n    API.get(`/api/posts/${id}`).then(response => {\n      this.setState({\n        title: response.data.title,\n        body: response.data.body,\n        loading: !this.state.loading\n      });\n    });\n  }\n\n  render() {\n    const {\n      title,\n      body\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, !this.state.loading && this.state.body !== \"\" ? /*#__PURE__*/React.createElement(Formik, {\n      onSubmit: this.handleSubmitCreate,\n      initialValues: {\n        POST_title: this.state.title,\n        // D.m.v. deze keys worden values opgehaald in <Field>\n        POST_editor: this.state.body\n      } // Input and give feedback / errors\n      ,\n      validationSchema: Yup.object({}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, props => /*#__PURE__*/React.createElement(PostTextEditor, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }))) : \"\");\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  state: state.posts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  edit: (values, postId) => dispatch(editPost(values, postId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/EditPost.js"],"names":["React","Component","API","Formik","connect","Yup","PostTextEditor","editPost","Redirect","EditPost","state","title","body","loading","handleSubmitCreate","values","postId","props","edit","match","params","idPost","window","location","href","componentDidMount","id","get","then","response","setState","data","render","POST_title","POST_editor","object","mapStateToProps","posts","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BS,KAD+B,GACvB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADuB;;AAAA,SAkB/BC,kBAlB+B,GAkBV,CAACC,MAAD,EAASC,MAAT,KAAoB;AACvC,WAAKC,KAAL,CAAWC,IAAX,CAAgBH,MAAhB,EAAwB,KAAKE,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,MAAhD;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqB,aAArB;AACD,KArB8B;AAAA;;AAO/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEJ,MAAAA,MAAM,EAAEK;AAAV,QAAiB,KAAKT,KAAL,CAAWE,KAAX,CAAiBC,MAAxC;AACAlB,IAAAA,GAAG,CAACyB,GAAJ,CAAS,cAAaD,EAAG,EAAzB,EAA4BE,IAA5B,CAAkCC,QAAD,IAAc;AAC7C,WAAKC,QAAL,CAAc;AACZnB,QAAAA,KAAK,EAAEkB,QAAQ,CAACE,IAAT,CAAcpB,KADT;AAEZC,QAAAA,IAAI,EAAEiB,QAAQ,CAACE,IAAT,CAAcnB,IAFR;AAGZC,QAAAA,OAAO,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAHT,OAAd;AAKD,KAND;AAOD;;AAODmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkB,KAAKF,KAA7B;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAKA,KAAL,CAAWG,OAAZ,IAAuB,KAAKH,KAAL,CAAWE,IAAX,KAAoB,EAA3C,gBACC,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKE,kBADjB;AAEE,MAAA,aAAa,EAAE;AACbmB,QAAAA,UAAU,EAAE,KAAKvB,KAAL,CAAWC,KADV;AAEb;AACAuB,QAAAA,WAAW,EAAE,KAAKxB,KAAL,CAAWE;AAHX,OAFjB,CAOE;AAPF;AAQE,MAAA,gBAAgB,EAAEP,GAAG,CAAC8B,MAAJ,CAAW,EAAX,CARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUIlB,KAAD,iBAAW,oBAAC,cAAD,oBAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAVd,CADD,GAcC,EAfJ,CADF;AAoBD;;AA9C8B;;AAiDjC,MAAMmB,eAAe,GAAI1B,KAAD,KAAY;AAClCA,EAAAA,KAAK,EAAEA,KAAK,CAAC2B;AADqB,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,IAAI,EAAE,CAACH,MAAD,EAASC,MAAT,KAAoBuB,QAAQ,CAAChC,QAAQ,CAACQ,MAAD,EAASC,MAAT,CAAT;AADM,CAAf,CAA3B;;AAIA,eAAeZ,OAAO,CAACgC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C7B,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { API } from \"../libs/API\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport PostTextEditor from \"../components/PostTextEditor\";\nimport { editPost } from \"../redux/actions/postsActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass EditPost extends Component {\n  state = {\n    title: \"\",\n    body: \"\",\n    loading: true,\n  };\n\n  componentDidMount() {\n    const { idPost: id } = this.props.match.params;\n    API.get(`/api/posts/${id}`).then((response) => {\n      this.setState({\n        title: response.data.title,\n        body: response.data.body,\n        loading: !this.state.loading,\n      });\n    });\n  }\n\n  handleSubmitCreate = (values, postId) => {\n    this.props.edit(values, this.props.match.params.idPost);\n    window.location.href(\"/overview/1\");\n  };\n\n  render() {\n    const { title, body } = this.state;\n\n    return (\n      <div>\n        {!this.state.loading && this.state.body !== \"\" ? (\n          <Formik\n            onSubmit={this.handleSubmitCreate}\n            initialValues={{\n              POST_title: this.state.title,\n              // D.m.v. deze keys worden values opgehaald in <Field>\n              POST_editor: this.state.body,\n            }}\n            // Input and give feedback / errors\n            validationSchema={Yup.object({})}\n          >\n            {(props) => <PostTextEditor {...props} />}\n          </Formik>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  edit: (values, postId) => dispatch(editPost(values, postId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);\n"]},"metadata":{},"sourceType":"module"}