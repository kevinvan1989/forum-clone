{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\nimport moment from '../moment';\n\nfunction plural(word, num) {\n  var forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\n\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n  var format = {\n    ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n    mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n    hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n    dd: 'день_дні_днів',\n    MM: 'місяць_місяці_місяців',\n    yy: 'рік_роки_років'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'хвилина' : 'хвилину';\n  } else if (key === 'h') {\n    return withoutSuffix ? 'година' : 'годину';\n  } else {\n    return number + ' ' + plural(format[key], +number);\n  }\n}\n\nfunction weekdaysCaseReplace(m, format) {\n  var weekdays = {\n    nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n    accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n    genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n  },\n      nounCase;\n\n  if (m === true) {\n    return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));\n  }\n\n  if (!m) {\n    return weekdays['nominative'];\n  }\n\n  nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format) ? 'accusative' : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format) ? 'genitive' : 'nominative';\n  return weekdays[nounCase][m.day()];\n}\n\nfunction processHoursFunction(str) {\n  return function () {\n    return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n  };\n}\n\nexport default moment.defineLocale('uk', {\n  months: {\n    format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n    standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n  },\n  monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n  weekdays: weekdaysCaseReplace,\n  weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY р.',\n    LLL: 'D MMMM YYYY р., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n  },\n  calendar: {\n    sameDay: processHoursFunction('[Сьогодні '),\n    nextDay: processHoursFunction('[Завтра '),\n    lastDay: processHoursFunction('[Вчора '),\n    nextWeek: processHoursFunction('[У] dddd ['),\n    lastWeek: function lastWeek() {\n      switch (this.day()) {\n        case 0:\n        case 3:\n        case 5:\n        case 6:\n          return processHoursFunction('[Минулої] dddd [').call(this);\n\n        case 1:\n        case 2:\n        case 4:\n          return processHoursFunction('[Минулого] dddd [').call(this);\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'за %s',\n    past: '%s тому',\n    s: 'декілька секунд',\n    ss: relativeTimeWithPlural,\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'годину',\n    hh: relativeTimeWithPlural,\n    d: 'день',\n    dd: relativeTimeWithPlural,\n    M: 'місяць',\n    MM: relativeTimeWithPlural,\n    y: 'рік',\n    yy: relativeTimeWithPlural\n  },\n  // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n  meridiemParse: /ночі|ранку|дня|вечора/,\n  isPM: function isPM(input) {\n    return /^(дня|вечора)$/.test(input);\n  },\n  meridiem: function meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночі';\n    } else if (hour < 12) {\n      return 'ранку';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечора';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n  ordinal: function ordinal(number, period) {\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n      case 'w':\n      case 'W':\n        return number + '-й';\n\n      case 'D':\n        return number + '-го';\n\n      default:\n        return number;\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n  }\n});","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/moment/dist/locale/uk.js"],"names":["moment","plural","word","num","forms","split","relativeTimeWithPlural","number","withoutSuffix","key","format","ss","mm","hh","dd","MM","yy","weekdaysCaseReplace","m","weekdays","nominative","accusative","genitive","nounCase","slice","concat","test","day","processHoursFunction","str","hours","defineLocale","months","standalone","monthsShort","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","lastDay","nextWeek","lastWeek","call","sameElse","relativeTime","future","past","s","h","d","M","y","meridiemParse","isPM","input","meridiem","hour","minute","isLower","dayOfMonthOrdinalParse","ordinal","period","week","dow","doy"],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n\nimport moment from '../moment';\n\nfunction plural(word, num) {\n    var forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11\n        ? forms[0]\n        : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n        ? forms[1]\n        : forms[2];\n}\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n    var format = {\n        ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n        mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n        hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n        dd: 'день_дні_днів',\n        MM: 'місяць_місяці_місяців',\n        yy: 'рік_роки_років',\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'хвилина' : 'хвилину';\n    } else if (key === 'h') {\n        return withoutSuffix ? 'година' : 'годину';\n    } else {\n        return number + ' ' + plural(format[key], +number);\n    }\n}\nfunction weekdaysCaseReplace(m, format) {\n    var weekdays = {\n            nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(\n                '_'\n            ),\n            accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(\n                '_'\n            ),\n            genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(\n                '_'\n            ),\n        },\n        nounCase;\n\n    if (m === true) {\n        return weekdays['nominative']\n            .slice(1, 7)\n            .concat(weekdays['nominative'].slice(0, 1));\n    }\n    if (!m) {\n        return weekdays['nominative'];\n    }\n\n    nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format)\n        ? 'accusative'\n        : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format)\n        ? 'genitive'\n        : 'nominative';\n    return weekdays[nounCase][m.day()];\n}\nfunction processHoursFunction(str) {\n    return function () {\n        return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n    };\n}\n\nexport default moment.defineLocale('uk', {\n    months: {\n        format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(\n            '_'\n        ),\n        standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(\n            '_'\n        ),\n    },\n    monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(\n        '_'\n    ),\n    weekdays: weekdaysCaseReplace,\n    weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY р.',\n        LLL: 'D MMMM YYYY р., HH:mm',\n        LLLL: 'dddd, D MMMM YYYY р., HH:mm',\n    },\n    calendar: {\n        sameDay: processHoursFunction('[Сьогодні '),\n        nextDay: processHoursFunction('[Завтра '),\n        lastDay: processHoursFunction('[Вчора '),\n        nextWeek: processHoursFunction('[У] dddd ['),\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return processHoursFunction('[Минулої] dddd [').call(this);\n                case 1:\n                case 2:\n                case 4:\n                    return processHoursFunction('[Минулого] dddd [').call(this);\n            }\n        },\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: 'за %s',\n        past: '%s тому',\n        s: 'декілька секунд',\n        ss: relativeTimeWithPlural,\n        m: relativeTimeWithPlural,\n        mm: relativeTimeWithPlural,\n        h: 'годину',\n        hh: relativeTimeWithPlural,\n        d: 'день',\n        dd: relativeTimeWithPlural,\n        M: 'місяць',\n        MM: relativeTimeWithPlural,\n        y: 'рік',\n        yy: relativeTimeWithPlural,\n    },\n    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n    meridiemParse: /ночі|ранку|дня|вечора/,\n    isPM: function (input) {\n        return /^(дня|вечора)$/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночі';\n        } else if (hour < 12) {\n            return 'ранку';\n        } else if (hour < 17) {\n            return 'дня';\n        } else {\n            return 'вечора';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n    ordinal: function (number, period) {\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            default:\n                return number;\n        }\n    },\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 7, // The week that contains Jan 7th is the first week of the year.\n    },\n});\n"]},"metadata":{},"sourceType":"module"}