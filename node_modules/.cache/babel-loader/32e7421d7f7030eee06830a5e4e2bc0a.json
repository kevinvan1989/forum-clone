{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/Overview.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPost } from \"../redux/actions/postsActions\";\nimport Blogpost from \"../components/Blogpost\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport CreatePostBtn from \"../components/CreatePostBtn\";\nimport { getUser } from \"../redux/actions/authActions\";\nimport Pagination from \"../components/Pagination\";\n\nclass Overview extends Component {\n  componentDidMount() {\n    console.log('props overview on mount');\n    this.props.getPosts(this.props.match.params.page);\n    this.props.getUser();\n    console.log(this.props);\n  }\n\n  render() {\n    const {\n      postData,\n      userAuthorized\n    } = this.props;\n\n    if (postData.posts && postData.posts.length !== 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-center my-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, \"Blogposts overview\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, userAuthorized.user !== \"not set\" && /*#__PURE__*/React.createElement(CreatePostBtn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 52\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, postData.posts.map(post => /*#__PURE__*/React.createElement(Blogpost, {\n        postDetail: post,\n        authInfo: userAuthorized,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Pagination, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          localStorage.setItem(\"last_visited_page\", 6);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"local\"));\n    } else {\n      return /*#__PURE__*/React.createElement(ClipLoader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  postData: state.posts,\n  userAuthorized: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPosts: page => dispatch(fetchPost(page)),\n  getUser: () => dispatch(getUser)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/Overview.js"],"names":["React","Component","connect","fetchPost","Blogpost","ClipLoader","CreatePostBtn","getUser","Pagination","Overview","componentDidMount","console","log","props","getPosts","match","params","page","render","postData","userAuthorized","posts","length","user","map","post","localStorage","setItem","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAC/BS,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,SAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,IAA5C;AACA,SAAKJ,KAAL,CAAWN,OAAX;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA+B,KAAKP,KAA1C;;AACA,QAAGM,QAAQ,CAACE,KAAT,IAAkBF,QAAQ,CAACE,KAAT,CAAeC,MAAf,KAA0B,CAA/C,EAAiD;AAC/C,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACL;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADK,eAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMF,cAAc,CAACG,IAAf,KAAwB,SAAxB,iBAAqC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3C,CAFK,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,QAAQ,CAACE,KAAT,CAAeG,GAAf,CAAoBC,IAAD,iBAClB,oBAAC,QAAD;AAAU,QAAA,UAAU,EAAEA,IAAtB;AAA4B,QAAA,QAAQ,EAAEL,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CAHG,eAQL,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARK,eASL;AAAQ,QAAA,OAAO,EAAE,MAAI;AAAEM,UAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0C,CAA1C;AAA8C,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATK,CAAP;AAWD,KAZD,MAYK;AACH,0BAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;;AAzB8B;;AA4BjC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,QAAQ,EAAEU,KAAK,CAACR,KADkB;AAElCD,EAAAA,cAAc,EAAES,KAAK,CAACC;AAFY,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,QAAQ,EAAGG,IAAD,IAAUe,QAAQ,CAAC7B,SAAS,CAACc,IAAD,CAAV,CADY;AAExCV,EAAAA,OAAO,EAAE,MAAMyB,QAAQ,CAACzB,OAAD;AAFiB,CAAf,CAA3B;;AAKA,eAAeL,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPost } from \"../redux/actions/postsActions\";\nimport Blogpost from \"../components/Blogpost\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport CreatePostBtn from \"../components/CreatePostBtn\";\nimport { getUser } from \"../redux/actions/authActions\";\nimport Pagination from \"../components/Pagination\";\n\nclass Overview extends Component {\n  componentDidMount() {\n    console.log('props overview on mount', )\n    this.props.getPosts(this.props.match.params.page);\n    this.props.getUser();\n    console.log(this.props)\n  }\n\n  render() {\n    const { postData, userAuthorized } = this.props;\n    if(postData.posts && postData.posts.length !== 0){\n      return <div>\n        <h1 className='text-center my-2'>Blogposts overview</h1>\n        <div>{userAuthorized.user !== \"not set\" && <CreatePostBtn />}</div>\n          <div>\n            {postData.posts.map((post) => (\n              <Blogpost postDetail={post} authInfo={userAuthorized}/>\n            ))}\n          </div>\n        <Pagination />\n        <button onClick={()=>{ localStorage.setItem(\"last_visited_page\", 6) }}>local</button>\n      </div>\n    }else{\n      return <ClipLoader />\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  postData: state.posts,\n  userAuthorized: state.auth\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getPosts: (page) => dispatch(fetchPost(page)),\n  getUser: () => dispatch(getUser),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);"]},"metadata":{},"sourceType":"module"}