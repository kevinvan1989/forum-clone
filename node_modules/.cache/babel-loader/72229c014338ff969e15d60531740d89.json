{"ast":null,"code":"var _jsxFileName = \"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/Overview.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPost } from \"../redux/actions/postsActions\";\nimport Blogpost from \"../components/Blogpost\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport CreatePostBtn from \"../components/CreatePostBtn\";\nimport { getUser } from \"../redux/actions/authActions\";\n\nclass Overview extends Component {\n  componentDidMount() {\n    this.props.getPosts(1);\n    this.props.getUser();\n  }\n\n  render() {\n    const {\n      postData,\n      userAuthorized\n    } = this.props;\n\n    if (postData.length !== 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-center my-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, \"Blogposts overview\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, userAuthorized.user !== \"not set\" && /*#__PURE__*/React.createElement(CreatePostBtn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 52\n        }\n      })), postData.posts.length !== 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, postData.posts.map(post => /*#__PURE__*/React.createElement(Blogpost, {\n        postDetail: post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }\n      }))) : /*#__PURE__*/React.createElement(ClipLoader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(ClipLoader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  postData: state.posts,\n  userAuthorized: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPosts: page => dispatch(fetchPost(page)),\n  getUser: () => dispatch(getUser)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/Overview.js"],"names":["React","Component","connect","fetchPost","Blogpost","ClipLoader","CreatePostBtn","getUser","Overview","componentDidMount","props","getPosts","render","postData","userAuthorized","length","user","posts","map","post","mapStateToProps","state","auth","mapDispatchToProps","dispatch","page"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,OAAT,QAAwB,8BAAxB;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC/BQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,QAAX,CAAoB,CAApB;AACA,SAAKD,KAAL,CAAWH,OAAX;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA+B,KAAKJ,KAA1C;;AAEA,QAAGG,QAAQ,CAACE,MAAT,KAAoB,CAAvB,EAAyB;AACvB,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACN;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADM,eAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMD,cAAc,CAACE,IAAf,KAAwB,SAAxB,iBAAqC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3C,CAFM,EAGLH,QAAQ,CAACI,KAAT,CAAeF,MAAf,KAA0B,CAA1B,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,QAAQ,CAACI,KAAT,CAAeC,GAAf,CAAoBC,IAAD,iBAClB,oBAAC,QAAD;AAAU,QAAA,UAAU,EAAEA,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADD,gBAOC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVI,CAAR;AAcD,KAfD,MAeK;AACH,0BAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AAEF;;AA5B8B;;AA+BjC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,QAAQ,EAAEQ,KAAK,CAACJ,KADkB;AAElCH,EAAAA,cAAc,EAAEO,KAAK,CAACC;AAFY,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,QAAQ,EAAGc,IAAD,IAAUD,QAAQ,CAACrB,SAAS,CAACsB,IAAD,CAAV,CADY;AAExClB,EAAAA,OAAO,EAAE,MAAMiB,QAAQ,CAACjB,OAAD;AAFiB,CAAf,CAA3B;;AAKA,eAAeL,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPost } from \"../redux/actions/postsActions\";\nimport Blogpost from \"../components/Blogpost\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport CreatePostBtn from \"../components/CreatePostBtn\";\nimport { getUser } from \"../redux/actions/authActions\";\n\nclass Overview extends Component {\n  componentDidMount() {\n    this.props.getPosts(1);\n    this.props.getUser();\n  }\n\n  render() {\n    const { postData, userAuthorized } = this.props;\n    \n    if(postData.length !== 0){\n      return (<div>\n        <h1 className='text-center my-2'>Blogposts overview</h1>\n        <div>{userAuthorized.user !== \"not set\" && <CreatePostBtn />}</div>\n        {postData.posts.length !== 0 ? (\n          <div>\n            {postData.posts.map((post) => (\n              <Blogpost postDetail={post} />\n            ))}\n          </div>\n        ) : (\n          <ClipLoader />\n        )}\n      </div>\n    )\n    }else{\n      return <ClipLoader />\n    }\n    \n  }\n}\n\nconst mapStateToProps = (state) => ({\n  postData: state.posts,\n  userAuthorized: state.auth\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getPosts: (page) => dispatch(fetchPost(page)),\n  getUser: () => dispatch(getUser),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);\n"]},"metadata":{},"sourceType":"module"}