{"ast":null,"code":"import _classCallCheck from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{API}from'../libs/API';import{Formik}from\"formik\";import{connect}from\"react-redux\";import*as Yup from\"yup\";import PostTextEditor from\"../components/PostTextEditor\";import{editPost}from'../redux/actions/postsActions';var EditPost=/*#__PURE__*/function(_Component){_inherits(EditPost,_Component);var _super=_createSuper(EditPost);function EditPost(){var _this;_classCallCheck(this,EditPost);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={title:'',body:'',loading:true};_this.handleSubmitCreate=function(values,postId){_this.props.edit(values,_this.props.match.params.idPost);};return _this;}_createClass(EditPost,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var id=this.props.match.params.idPost;API.get(\"/api/posts/\".concat(id)).then(function(response){_this2.setState({title:response.data.title,body:response.data.body,loading:!_this2.state.loading});});}},{key:\"render\",value:function render(){var _this$state=this.state,title=_this$state.title,body=_this$state.body;return/*#__PURE__*/React.createElement(\"div\",null,!this.state.loading&&this.state.body!==''?/*#__PURE__*/React.createElement(Formik,{onSubmit:this.handleSubmitCreate,initialValues:{POST_title:this.state.title,// D.m.v. deze keys worden values opgehaald in <Field>\nPOST_editor:this.state.body}// Input and give feedback / errors\n,validationSchema:Yup.object({})},function(props){return/*#__PURE__*/React.createElement(PostTextEditor,props);}):'');}}]);return EditPost;}(Component);var mapStateToProps=function mapStateToProps(state){return{state:state.posts};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{edit:function edit(values,postId){return dispatch(editPost(values,postId));}};};export default connect(mapStateToProps,mapDispatchToProps)(EditPost);","map":{"version":3,"sources":["/Users/kevinvanantwerpen/Documents/Eindwerk Syntra 2020/src/Pages/EditPost.js"],"names":["React","Component","API","Formik","connect","Yup","PostTextEditor","editPost","EditPost","state","title","body","loading","handleSubmitCreate","values","postId","props","edit","match","params","idPost","id","get","then","response","setState","data","POST_title","POST_editor","object","mapStateToProps","posts","mapDispatchToProps","dispatch"],"mappings":"wqBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAAQC,GAAR,KAAkB,aAAlB,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,8BAA3B,CACA,OAASC,QAAT,KAAyB,+BAAzB,C,GAEMC,CAAAA,Q,mUACFC,K,CAAQ,CACJC,KAAK,CAAE,EADH,CAEJC,IAAI,CAAE,EAFF,CAGJC,OAAO,CAAE,IAHL,C,OAmBRC,kB,CAAqB,SAACC,MAAD,CAASC,MAAT,CAAoB,CACrC,MAAKC,KAAL,CAAWC,IAAX,CAAgBH,MAAhB,CAAwB,MAAKE,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,MAAhD,EACH,C,iGAfkB,oBACAC,CAAAA,EADA,CACM,KAAKL,KAAL,CAAWE,KAAX,CAAiBC,MADvB,CACRC,MADQ,CAEflB,GAAG,CAACoB,GAAJ,sBAAsBD,EAAtB,GAA4BE,IAA5B,CACI,SAAAC,QAAQ,CAAI,CACR,MAAI,CAACC,QAAL,CAAc,CACVf,KAAK,CAAEc,QAAQ,CAACE,IAAT,CAAchB,KADX,CAEVC,IAAI,CAAEa,QAAQ,CAACE,IAAT,CAAcf,IAFV,CAGVC,OAAO,CAAE,CAAC,MAAI,CAACH,KAAL,CAAWG,OAHX,CAAd,EAKH,CAPL,EASH,C,uCAMQ,iBACiB,KAAKH,KADtB,CACEC,KADF,aACEA,KADF,CACSC,IADT,aACSA,IADT,CAGL,mBACI,+BACK,CAAC,KAAKF,KAAL,CAAWG,OAAZ,EAAuB,KAAKH,KAAL,CAAWE,IAAX,GAAoB,EAA3C,cAAgD,oBAAC,MAAD,EACvD,QAAQ,CAAE,KAAKE,kBADwC,CAGvD,aAAa,CAAE,CACbc,UAAU,CAAE,KAAKlB,KAAL,CAAWC,KADV,CAEb;AACAkB,WAAW,CAAE,KAAKnB,KAAL,CAAWE,IAHX,CAKf;AARuD,CASvD,gBAAgB,CAAEN,GAAG,CAACwB,MAAJ,CAAW,EAAX,CATqC,EAWtD,SAAAb,KAAK,qBAAI,oBAAC,cAAD,CAAoBA,KAApB,CAAJ,EAXiD,CAAhD,CAeb,EAhBQ,CADJ,CAqBH,C,sBAhDkBf,S,EAmDvB,GAAM6B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAArB,KAAK,QAAI,CAC7BA,KAAK,CAAEA,KAAK,CAACsB,KADgB,CAAJ,EAA7B,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACpChB,IAAI,CAAE,cAACH,MAAD,CAASC,MAAT,QAAoBkB,CAAAA,QAAQ,CAAC1B,QAAQ,CAACO,MAAD,CAASC,MAAT,CAAT,CAA5B,EAD8B,CAAL,EAAnC,CAIA,cAAeX,CAAAA,OAAO,CAAC0B,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CxB,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {API} from '../libs/API'\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\"\nimport * as Yup from \"yup\";\nimport PostTextEditor from \"../components/PostTextEditor\";\nimport { editPost } from '../redux/actions/postsActions';\n\nclass EditPost extends Component {\n    state = {\n        title: '',\n        body: '',\n        loading: true\n    }\n     \n    componentDidMount(){\n        const {idPost: id} = this.props.match.params\n        API.get(`/api/posts/${id}`).then(\n            response => {\n                this.setState({\n                    title: response.data.title,\n                    body: response.data.body,\n                    loading: !this.state.loading\n                })\n            }\n        )\n    }\n\n    handleSubmitCreate = (values, postId) => {\n        this.props.edit(values, this.props.match.params.idPost)\n    }\n\n    render() {\n        const {title, body} = this.state\n\n        return (\n            <div>\n                {!this.state.loading && this.state.body !== '' ? <Formik\n          onSubmit={this.handleSubmitCreate}\n          \n          initialValues={{\n            POST_title: this.state.title,\n            // D.m.v. deze keys worden values opgehaald in <Field>\n            POST_editor: this.state.body\n          }}\n          // Input and give feedback / errors\n          validationSchema={Yup.object({})}\n        >\n          {props => <PostTextEditor {...props} />}\n        </Formik>\n        \n    :\n    ''}\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state =>({\n    state: state.posts\n}) \n\nconst mapDispatchToProps = dispatch => ({\n    edit: (values, postId) => dispatch(editPost(values, postId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost)"]},"metadata":{},"sourceType":"module"}